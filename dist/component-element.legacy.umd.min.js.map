{"version":3,"sources":["webpack://ComponentElement/webpack/universalModuleDefinition","webpack://ComponentElement/webpack/bootstrap","webpack://ComponentElement/./node_modules/common-micro-libs/src/jsutils/getGlobal.js","webpack://ComponentElement/(webpack)/buildin/global.js","webpack://ComponentElement/./node_modules/common-micro-libs/src/jsutils/objectExtend.js","webpack://ComponentElement/./node_modules/common-micro-libs/src/jsutils/runtime-aliases.js","webpack://ComponentElement/./node_modules/common-micro-libs/src/jsutils/Iterator.js","webpack://ComponentElement/./node_modules/common-micro-libs/src/jsutils/Set.js","webpack://ComponentElement/./node_modules/common-micro-libs/src/jsutils/nextTick.js","webpack://ComponentElement/./node_modules/observables/src/objectWatchProp.js","webpack://ComponentElement/./node_modules/common-micro-libs/src/domutils/domAddEventListener.js","webpack://ComponentElement/./node_modules/common-micro-libs/src/jsutils/WeakMap.js","webpack://ComponentElement/./node_modules/common-micro-libs/src/jsutils/dataStore.js","webpack://ComponentElement/./node_modules/common-micro-libs/src/jsutils/Symbol.js","webpack://ComponentElement/./src/utils.js","webpack://ComponentElement/./src/polyfill-support.js","webpack://ComponentElement/./src/ComponentElement.js","webpack://ComponentElement/./src/decorators/prop.js","webpack://ComponentElement/./src/decorators/bind.js","webpack://ComponentElement/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","GLOBAL","_typeof","global","self","Function","g","this","eval","e","OBJECT_TYPE","_toString","toString","objectExtend","mergeIntoObj","response","_len","arguments","length","mergeObjects","Array","_key","total","deepMerge","shift","functionBindCall","functionBind","objectDefineProperty","objectDefineProperties","defineProperties","objectKeys","keys","arr","isArray","arrayIndexOf","forEach","indexOf","consoleLog","splice","console","log","SymbolIterator","error","warn","iterator","HTMLElementPrototype","HTMLElement","doc","document","head","appendChild","insertBefore","hasAttribute","setAttribute","removeAttribute","FakeIterator","values","slice","idx","constructor","next","configurable","done","_","undefined","nextIdx","Set","FakeSet","_defineProperty","add","item","push","has","size","clear","delete","entries","cb","thisArg","_this","reIsNativeCode","nextTick","setImediate","test","Promise","resolved","resolve","fn","then","catch","immediates","processing","processPending","setTimeout","isQueued","queuedCallbacks","flushQueue","callbacks","queue","callback","OBSERVABLE_IDENTIFIER","DEFAULT_PROP_DEFINITION","TRACKERS","WATCHER_IDENTIFIER","ARRAY_WATCHABLE_PROTO","HAS_ARRAY_WATCHABLE_PROTO","ARRAY_MUTATING_METHODS","isPureObject","obj","NOTIFY_QUEUE","isNotifyQueued","objectWatchProp","prop","setupObjState","props","setupPropState","setupPropInterceptors","setupInterceptors","storeCallback","makeObservable","unWatch","propSetup","dependents","unsetCallbackAsWatcherOf","watchers","destroy","writable","deep","setupCallbackStore","store","async","notify","val","parent","propOldDescriptor","getOwnPropertyDescriptor","set","newVal","priorVal","walk","force","arrCurrentProto","__proto__","arrProtoInterceptor","method","_arrCurrentProto$meth","args","apply","concat","makeArrayWatchable","walkArray","walkObject","pushCallbacksToQueue","execCallback","queueCallbackAndScheduleRun","x","asDependent","setCallbackAsWatcherOf","watchersSet","watching","watcherList","domAddEventListener","FakeWeakMap","ele","event","capture","events","split","evListeners","evName","addEventListener","remove","removeEventListener","listeners","WeakMap","counter","Date","now","Math","random","entry","dataStore","stash","UNIQUE","substring","COUNTER","SYMBOL_PROTOTYPE","description","_id","valueOf","FakeSymbol","TypeError","PRIVATE","STATE_SYMBOL","elementHasAttributeForProp","propDef","aliases","some","propAlias","getState","instance","state","ready","readyWatcher","destroyCallbacks","destroyQueued","isMounted","hasTemplate","propDefintions","getPropsDefinition","required","filter","propName","_isAlias","setReadyState","every","ComponentClass","getComponentClassState","propsDef","propAliasDef","propNameAlias","template","observedAttrs","getComponentInstanceTemplate","componentInstance","ownerDocument","importNode","getComponentTemplate","content","Component","classState","createElement","innerHTML","supportsShadyCSS","ShadyCSS","SHADOW_DOM_SUPPORTED","createShadowRoot","attachShadow","EV_DEFAULT_INIT","bubbles","cancelable","composed","CE_REGISTRY","customElements","ComponentElement","_fixBabelExtend","_HTMLElement","_ref","_classCallCheck","_possibleConstructorReturn","getPrototypeOf","setupComponent","_inherits","_createClass","oldValue","newValue","clearTimeout","parentNode","removeChild","selector","$ui","querySelector","result","querySelectorAll","eventName","data","eventInit","dispatchEvent","CustomEvent","eventInitOptions","detail","eventNames","styleElement","styleComponentInstanceElement","mounted","delayDestroy","unmounted","_this2","Error","_$props","propDefinitions","propValue","default","attr","boolean","attrVal","getAttribute","geAttributeValueForProp","_$ui","tagName","prepareTemplate","prepareComponentTemplate","eleInstance","propList","component","lastReadyState","handleReadyChanges","renderTemplate","unready","useShadow","shadowRoot","shadowMode","init","onDestroy","RE_UPPER_CASE_LETTERS","NOOP","setupProp","options","Proto","descriptor","setter","classProps","getClassProps","toLowerCase","str","replace","match","p1","getKebabCase","getPropDef","lazyProp","propAliasName","aliasPropGetterSetterSetup","$propName","isUpdateMode","getOwnPropertyNames","writeToPropName","propFn","__webpack_exports__","ComponentElement_ComponentElement","prop_prop"],"mappings":"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","file":"component-element.legacy.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ComponentElement\"] = factory();\n\telse\n\t\troot[\"ComponentElement\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","\r\nexport const GLOBAL = (() => {\r\n    const undef = 'undefined';\r\n    /* global self, window, global */\r\n    if (typeof window !== undef) { return window; }\r\n    if (typeof global !== undef) { return global; }\r\n    if (typeof self !== undef) { return self; }\r\n    return Function('return this;')();\r\n})();\r\n\r\nexport function getGlobal() {\r\n    return GLOBAL;\r\n}\r\nexport default getGlobal;","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","const OBJECT_TYPE   = \"[object Object]\";\r\nconst _toString     = Function.call.bind(Object.prototype.toString);\r\n\r\n//============================================================\r\n\r\n/**\r\n * Extends an object with the properties of another.\r\n *\r\n * @param {Object|Boolean} mergeIntoObj\r\n *  The object that will have the properties of every other object provided\r\n *  on input merged into. This can also be a `Boolean`, in which case,\r\n *  a deep merge of objects will be done - argument number 2 will\r\n *  become the `mergeIntoObj`.\r\n * @param {...Object} mergeObjects\r\n *\r\n * @return {Object}\r\n */\r\nexport function objectExtend(mergeIntoObj, ...mergeObjects) {\r\n    let response    = mergeIntoObj || {};\r\n    let total       = mergeObjects.length;\r\n    let deepMerge   = false;\r\n    let i;\r\n    let key;\r\n\r\n    if (typeof mergeIntoObj === \"boolean\") {\r\n        deepMerge   = mergeIntoObj;\r\n        response    = mergeObjects.shift() || {};\r\n        total       = mergeObjects.length;\r\n    }\r\n\r\n    for (i = 0; i < total; i++) {\r\n        if (!mergeObjects[i]) {\r\n            continue;\r\n        }\r\n\r\n        for (key in mergeObjects[i]) {\r\n            if (mergeObjects[i].hasOwnProperty(key)){\r\n                if (\r\n                    deepMerge &&\r\n                    _toString(response[key]) === OBJECT_TYPE &&\r\n                    _toString(mergeObjects[i][key]) === OBJECT_TYPE\r\n                ) {\r\n                    response[key] = objectExtend( true, response[key], mergeObjects[i][key]);\r\n                    \r\n                } else {\r\n                    response[key] = mergeObjects[i][key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return response;\r\n}\r\nexport default objectExtend;","/**\r\n * return a value to a given method\r\n *\r\n * @function\r\n * @param {Function} fn\r\n * @param {*} ctx The context to be assigned to `fn`\r\n * @return {Function}\r\n *\r\n * @example\r\n *\r\n * f = functionBin(function() { console.log(`Hello ${this.name}`); }, { name: \"Jackson\" });\r\n * f(); // => \"Hello Jackson\"\r\n */\r\nexport const functionBind = Function.bind.call.bind(Function.bind);\r\n\r\n/**\r\n * return a bound `.call` to the given method.\r\n *\r\n * @type function\r\n * @param {Function} fn\r\n * @return {Function}\r\n * @example\r\n *\r\n * forEach = functionBindCall(Array.prototype.forEach);\r\n * // same as doing: Array.prototype.forEach.call (but returns a new \"call\" method);\r\n */\r\nexport const functionBindCall = functionBind(Function.call.bind, Function.call);\r\n\r\n// Object ===============================================================================\r\nexport const isObject                 = obj => Object.prototype.toString.call(obj) === \"[object Object]\";\r\nexport const objectDefineProperty     = Object.defineProperty;\r\nexport const objectDefineProperties   = Object.defineProperties;\r\nexport const objectKeys               = Object.keys;\r\nexport const defineProperty = (obj, prop, value, getter, setter, configurable = true, enumerable = false, writable = true) => {\r\n    const descriptor = {\r\n        configurable,\r\n        enumerable,\r\n        writable\r\n    };\r\n\r\n    if (getter || setter) {\r\n        descriptor.writable = false;\r\n        descriptor.get = getter;\r\n        descriptor.set = setter;\r\n    } else {\r\n        descriptor.value = value;\r\n    }\r\n\r\n    objectDefineProperty(obj, prop, descriptor);\r\n\r\n    return obj;\r\n};\r\n\r\n\r\n// Array ===============================================================================\r\nconst arr = [];\r\nexport const isArray        = Array.isArray;\r\nexport const arrayForEach   = functionBindCall(arr.forEach);\r\nexport const arrayIndexOf   = functionBindCall(arr.indexOf);\r\nexport const arraySplice    = functionBindCall(arr.splice);\r\n\r\n\r\n// Logging ===============================================================================\r\nexport const consoleLog = console.log; // eslint-disable-line\r\nexport const consoleError = console.error || consoleLog; // eslint-disable-line\r\nexport const consoleWarn = console.warn || consoleLog; // eslint-disable-line\r\n\r\n\r\n// Iterators ===============================================================================\r\nexport const SymbolIterator = \"undefined\" !== typeof Symbol && Symbol.iterator ? Symbol.iterator : \"@@iterator\";\r\n\r\n\r\n// DOM ===============================================================================\r\nconst HTMLElementPrototype = HTMLElement.prototype;\r\nexport const doc = document;\r\nexport const head = doc.head;\r\nexport const createDocFragment = () => doc.createDocumentFragment();\r\nexport const createElement = tagName => doc.createElement(tagName);\r\nexport const createTextNode = data => doc.createTextNode(data || \"\");\r\nexport const appendChild = functionBindCall(HTMLElementPrototype.appendChild);\r\nexport const insertBefore = functionBindCall(HTMLElementPrototype.insertBefore);\r\nexport const hasAttribute = functionBindCall(HTMLElementPrototype.hasAttribute);\r\nexport const setAttribute = functionBindCall(HTMLElementPrototype.setAttribute);\r\nexport const removeAttribute = functionBindCall(HTMLElementPrototype.removeAttribute);","import {\r\n    objectDefineProperty,\r\n    objectDefineProperties,\r\n    SymbolIterator\r\n} from \"./runtime-aliases\"\r\n\r\n//-----------------------------------------------------------------------\r\n\r\n// Great reference: http://2ality.com/2015/02/es6-iteration.html\r\nexport function FakeIterator(keys, values) {\r\n    objectDefineProperty(this, \"_\", { value: {\r\n        keys:   keys.slice(0),\r\n        values: values ? values.slice(0) : null,\r\n        idx:    0,\r\n        total:  keys.length\r\n    } });\r\n}\r\nexport default FakeIterator;\r\n\r\nobjectDefineProperties(FakeIterator.prototype, {\r\n    constructor: { value: FakeIterator },\r\n    next: {\r\n        enumerable: true,\r\n        configurable: true,\r\n        value() {\r\n            const response = {\r\n                done: this._.idx === this._.total\r\n            };\r\n\r\n            if (response.done) {\r\n                response.value = undefined;\r\n                return response;\r\n            }\r\n\r\n            const nextIdx = this._.idx++;\r\n\r\n            response.value = this._.keys[nextIdx];\r\n\r\n            if (this._.values) {\r\n                response.value = [ response.value, this._.values[nextIdx] ];\r\n            }\r\n\r\n            return response;\r\n        }\r\n    }\r\n});\r\nobjectDefineProperty(FakeIterator.prototype, SymbolIterator, { value(){ return this; } });\r\n\r\n","import { GLOBAL } from \"./getGlobal\"\r\nimport { FakeIterator } from \"./Iterator\"\r\nimport {\r\n    objectDefineProperties,\r\n    objectDefineProperty,\r\n    arrayIndexOf,\r\n    SymbolIterator\r\n} from \"./runtime-aliases\"\r\n\r\n//============================================================\r\n\r\nexport const Set = GLOBAL.Set && GLOBAL.Set.prototype[SymbolIterator] ? GLOBAL.Set : FakeSet;\r\nexport default Set;\r\n\r\nexport function FakeSet() {\r\n    // FIXME: support for iterable input\r\n}\r\n\r\nobjectDefineProperties(FakeSet.prototype, {\r\n    constructor: { value: FakeSet, configurable: true },\r\n    _: {\r\n        get() {\r\n            const values = [];\r\n            objectDefineProperty(this, \"_\", { value: values });\r\n            return values;\r\n        }\r\n    },\r\n    add: {\r\n        value(item) {\r\n            if (arrayIndexOf(this._, item) === -1) {\r\n                this._.push(item);\r\n            }\r\n            return this;\r\n        }\r\n    },\r\n    has: {\r\n        value(item) { return arrayIndexOf(this._, item) !== -1; }\r\n    },\r\n    size: {\r\n        get() { return this._.length; }\r\n    },\r\n    clear: {\r\n        value() { this._.splice(0); }\r\n    },\r\n    delete: {\r\n        value(item) {\r\n            const idx = arrayIndexOf(this._, item);\r\n            if (idx !== -1) {\r\n                this._.splice(idx, 1);\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    },\r\n    values: {\r\n        value() {\r\n            return new FakeIterator(this._);\r\n        }\r\n    },\r\n    entries: {\r\n        value() {\r\n            return new FakeIterator(this._, this._);\r\n        }\r\n    },\r\n    forEach: {\r\n        value(cb, thisArg) {\r\n            this._.forEach(item => cb(item, item, this), thisArg);\r\n        }\r\n    },\r\n    [SymbolIterator]: {\r\n        value() {\r\n            return this.values();\r\n        }\r\n    }\r\n});\r\n\r\n\r\n","let reIsNativeCode = /native code/i;\r\n\r\n/**\r\n * Executes a function at the end of the current event Loop - during micro-task processing\r\n *\r\n * @param {Function} callback\r\n */\r\nlet nextTick = (function(){\r\n    if (typeof setImediate !== \"undefined\" && reIsNativeCode.test(setImediate.toString())) {\r\n        return setImediate;\r\n    }\r\n\r\n    // Native Promsie? Use it.\r\n    if (typeof Promise === 'function' && reIsNativeCode.test(Promise.toString())) {\r\n        let resolved = Promise.resolve();\r\n        return function _nextTickPromise(fn) {\r\n            resolved.then(fn).catch(e => console.error(e));\r\n        };\r\n    }\r\n\r\n    // fallback to setTimeout\r\n    // From: https://bugzilla.mozilla.org/show_bug.cgi?id=686201#c68\r\n    let immediates = [];\r\n    let processing = false;\r\n\r\n    function processPending() {\r\n        setTimeout(function() {\r\n            immediates.shift()();\r\n            if (immediates.length) {\r\n                processPending();\r\n            } else {\r\n                processing = false;\r\n            }\r\n        }, 0);\r\n    }\r\n\r\n    return function _nextTickSetTimeout(fn) {\r\n        immediates.push(fn);\r\n        if (!processing) {\r\n            processing = true;\r\n            processPending();\r\n        }\r\n    };\r\n})();\r\n\r\nlet isQueued = false;\r\nconst queuedCallbacks = new Set();\r\nlet i, t;\r\nconst flushQueue = () => {\r\n    const callbacks = [ ...queuedCallbacks ];\r\n    queuedCallbacks.clear();\r\n    isQueued = false;\r\n    for (i = 0, t = callbacks.length; i < t; i++) {\r\n        callbacks[i]();\r\n    }\r\n};\r\n\r\n/**\r\n * Queues a callback to be executed on nextTick. Unlike calling `nextTick` directly\r\n * `queue()` will ensure that the same callback is not executed more than once when\r\n * `nextTick` runs.\r\n *\r\n * @param {Function} callback\r\n */\r\nnextTick.queue = callback => {\r\n    queuedCallbacks.add(callback);\r\n    if (!isQueued) {\r\n        isQueued = true;\r\n        nextTick(flushQueue);\r\n    }\r\n};\r\n\r\nexport default nextTick;\r\nexport { nextTick };\r\n","import {objectDefineProperty, objectKeys, isArray} from \"common-micro-libs/src/jsutils/runtime-aliases\";\r\nimport Set from \"common-micro-libs/src/jsutils/Set\"\r\nimport nextTick from \"common-micro-libs/src/jsutils/nextTick\"\r\n\r\n//---------------------------------------------------------------------------\r\nexport const OBSERVABLE_IDENTIFIER = \"___$observable$___\"; // FIXME: this should be a Symbol()\r\n\r\nconst DEFAULT_PROP_DEFINITION = { configurable: true, enumerable: true };\r\nconst TRACKERS = new Set();\r\nconst WATCHER_IDENTIFIER = \"___$watching$___\";\r\nconst ARRAY_WATCHABLE_PROTO = \"__$watchable$__\";\r\nconst HAS_ARRAY_WATCHABLE_PROTO = `__$is${ARRAY_WATCHABLE_PROTO}`;\r\nconst ARRAY_MUTATING_METHODS = [\r\n    \"pop\",\r\n    \"push\",\r\n    \"shift\",\r\n    \"splice\",\r\n    \"unshift\",\r\n    \"sort\",\r\n    \"reverse\"\r\n];\r\nconst isPureObject = obj => obj && Object.prototype.toString.call(obj) === \"[object Object]\";\r\nconst NOTIFY_QUEUE = new Set();\r\nlet isNotifyQueued = false;\r\n\r\n/**\r\n * A lightweight utility to Watch an object's properties and get notified when it changes.\r\n *\r\n * @param {Object} obj\r\n *\r\n * @param {String} [prop]\r\n *  the property to be watched. If left undefined, then all existing properties are watched.\r\n *\r\n * @param {Function} [callback]\r\n *  The callback to be executed when property or object changes. If left undefined, then\r\n *  `obj` is only made observable (internal structure created and all current enumerable'\r\n *  properties are made \"watchable\")\r\n *\r\n *  __NOTE:__\r\n *  The callback will include a new non-enumerable property named `stopWatchingAll` of\r\n *  type `Function` that can be used to remove the given callback from all places where\r\n *  it is being used to watch a property. example:\r\n *\r\n *      const obj1 = { first: \"john\" };\r\n *      const obj2 = { last: \"smith\" };\r\n *      const watcher = () => console.log(\"changed\");\r\n *\r\n *      objectWatchProp(obj, \"first\", watcher);\r\n *      objectWatchProp(obj1, \"last\", watcher);\r\n *\r\n *      watcher.stopWatchingAll(); // removes callback from all objects that it is watching\r\n *\r\n *\r\n * @return {ObjectUnwatchProp}\r\n * Return a function to unwatch the property. Function also has a static property named\r\n * `destroy` that will do the same thing (ex. `unwatch.destroy()` is same as `unwatch()`)\r\n *\r\n * @example\r\n *\r\n * const oo = {};\r\n * const notifyNameChanged =() => console.log(`name changed: ${oo.name}`);\r\n * const unWatchName = objectWatchProp(oo, \"name\", notifyNameChanged);\r\n *\r\n * oo.name = \"paul\"; // console outputs: name changed: paul\r\n * unWatchName(); // stop watching\r\n * notifyNameChanged.stopWatchingAll(); // callback's `stopWatchingAll()` can also be called.\r\n *\r\n * @example\r\n *\r\n * const oo = {\r\n *      name: \"paul\",\r\n *      country: \"usa\"\r\n * };\r\n *\r\n * // watch all changes to object\r\n * objectWatchProp(oo, null, () => console.log(\"Something changed in object\"));\r\n *\r\n * // OR: make all properties of object observable\r\n * objectWatchProp(oo);\r\n *\r\n */\r\nexport function objectWatchProp(obj, prop, callback) {\r\n    if (!obj[OBSERVABLE_IDENTIFIER]) {\r\n        setupObjState(obj);\r\n    }\r\n\r\n    // Convert prop to observable?\r\n    if (prop && !obj[OBSERVABLE_IDENTIFIER].props[prop]) {\r\n        setupPropState(obj, prop);\r\n        setupPropInterceptors(obj, prop);\r\n    }\r\n    // Else: do we need to setup the interceptors (again)?\r\n    // (Used by Computed props when they are created against a prop has\r\n    // been setup as an observable)\r\n    else if (prop && obj[OBSERVABLE_IDENTIFIER].props[prop].setupInterceptors) {\r\n        setupPropInterceptors(obj, prop);\r\n    }\r\n\r\n    if (prop && callback) {\r\n        obj[OBSERVABLE_IDENTIFIER].props[prop].storeCallback(callback);\r\n    }\r\n    else if (!prop) {\r\n        makeObservable(obj, false);\r\n\r\n        if (callback) {\r\n            obj[OBSERVABLE_IDENTIFIER].storeCallback(callback);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Unwatch an object property or object.\r\n     *\r\n     * @typedef {Function} ObjectUnwatchProp\r\n     * @property {Function} destroy Same as function returned.\r\n     */\r\n    const unWatch = destroyWatcher.bind(\r\n        obj,\r\n        callback,\r\n        (prop ? obj[OBSERVABLE_IDENTIFIER].props[prop] : obj[OBSERVABLE_IDENTIFIER])\r\n    );\r\n\r\n    unWatch.destroy = unWatch;\r\n    return unWatch;\r\n}\r\n\r\nexport function setupObjState(obj) {\r\n    if (!obj[OBSERVABLE_IDENTIFIER]) {\r\n        objectDefineProperty(obj, OBSERVABLE_IDENTIFIER, {\r\n            configurable: true,\r\n            writable: true,\r\n            deep: false,\r\n            value: {\r\n                props: {},\r\n                dependents: new Set(),\r\n                watchers: new Set(),\r\n                storeCallback: storeCallback\r\n            }\r\n        });\r\n        setupCallbackStore(obj[OBSERVABLE_IDENTIFIER].dependents, false);\r\n        setupCallbackStore(obj[OBSERVABLE_IDENTIFIER].watchers, true);\r\n    }\r\n}\r\n\r\nfunction setupCallbackStore (store, async = false) {\r\n    store.async = async;\r\n    store.isQueued = false;\r\n    store.notify = notify;\r\n}\r\n\r\nfunction setupPropState(obj, prop) {\r\n    if (!obj[OBSERVABLE_IDENTIFIER].props[prop]) {\r\n        obj[OBSERVABLE_IDENTIFIER].props[prop] = {\r\n            val: undefined,\r\n            dependents: new Set(),\r\n            watchers: new Set(),\r\n            parent: obj[OBSERVABLE_IDENTIFIER],\r\n            storeCallback: storeCallback,\r\n            setupInterceptors: true,\r\n            deep: obj[OBSERVABLE_IDENTIFIER].deep\r\n        };\r\n        setupCallbackStore(obj[OBSERVABLE_IDENTIFIER].props[prop].dependents, false);\r\n        setupCallbackStore(obj[OBSERVABLE_IDENTIFIER].props[prop].watchers, true);\r\n    }\r\n    return obj[OBSERVABLE_IDENTIFIER].props[prop];\r\n}\r\n\r\nfunction setupPropInterceptors(obj, prop) {\r\n    const propOldDescriptor =\r\n        Object.getOwnPropertyDescriptor(obj, prop) || DEFAULT_PROP_DEFINITION;\r\n\r\n    if (!propOldDescriptor.get) {\r\n        obj[OBSERVABLE_IDENTIFIER].props[prop].val = obj[prop];\r\n\r\n        // If prop is marked as `deep` then walk the value and convert it to observables\r\n        if (obj[OBSERVABLE_IDENTIFIER].props[prop].deep) {\r\n            makeObservable(obj[OBSERVABLE_IDENTIFIER].props[prop].val);\r\n        }\r\n    }\r\n\r\n    objectDefineProperty(obj, prop, {\r\n        configurable: propOldDescriptor.configurable || false,\r\n        enumerable: propOldDescriptor.enumerable || false,\r\n        get() {\r\n            if (TRACKERS.size) {\r\n                TRACKERS.forEach(\r\n                    obj[OBSERVABLE_IDENTIFIER].props[prop].storeCallback,\r\n                    obj[OBSERVABLE_IDENTIFIER].props[prop]\r\n                );\r\n            }\r\n\r\n            if (propOldDescriptor.get) {\r\n                return propOldDescriptor.get.call(obj);\r\n            }\r\n\r\n            return obj[OBSERVABLE_IDENTIFIER].props[prop].val;\r\n        },\r\n        set(newVal) {\r\n            const priorVal = obj[prop];\r\n            if (propOldDescriptor.set) {\r\n                newVal = propOldDescriptor.set.call(obj, newVal);\r\n            } else {\r\n                obj[OBSERVABLE_IDENTIFIER].props[prop].val = newVal;\r\n            }\r\n\r\n            // If this `deep` is true and the new value is an object,\r\n            // then ensure its observable\r\n            if (obj[OBSERVABLE_IDENTIFIER].props[prop].deep) {\r\n                makeObservable(newVal);\r\n            }\r\n\r\n            if (newVal !== priorVal) {\r\n                obj[OBSERVABLE_IDENTIFIER].props[prop].watchers.notify();\r\n                obj[OBSERVABLE_IDENTIFIER].props[prop].dependents.notify();\r\n                obj[OBSERVABLE_IDENTIFIER].watchers.notify();\r\n            }\r\n\r\n            return newVal;\r\n        }\r\n    });\r\n\r\n    obj[OBSERVABLE_IDENTIFIER].props[prop].setupInterceptors = false;\r\n\r\n    // Notify object watchers that a new prop was added\r\n    if (propOldDescriptor === DEFAULT_PROP_DEFINITION) {\r\n        obj[OBSERVABLE_IDENTIFIER].watchers.notify();\r\n    }\r\n}\r\n\r\n/**\r\n * Makes an object (deep) observable.\r\n *\r\n * @param {Object|Array} obj\r\n * @param {Boolean} [walk=true]\r\n *  If `true` (default), the object's property values are walked and\r\n *  also make observable.\r\n * @param {Boolean} [force=false]\r\n *  if true, then even if object looks like it might have already been\r\n *  converted to an observable, it will still be walked\r\n *  (if `walk` is `true`)\r\n *\r\n * @return {Object|Array} Original `obj` is returned\r\n */\r\nexport function makeObservable(obj, walk = true, force = false) {\r\n    if (!isPureObject(obj) && !isArray(obj)) {\r\n        return obj;\r\n    }\r\n\r\n    if (!obj[OBSERVABLE_IDENTIFIER]) {\r\n        // OBJECT\r\n        if (isPureObject(obj)) {\r\n            setupObjState(obj, force);\r\n        }\r\n        // ARRAY\r\n        else if (isArray(obj)) {\r\n            makeArrayWatchable(obj, force);\r\n        }\r\n    }\r\n\r\n    // If object is marked as \"deep\" and we are not forcing the walk,\r\n    // then no need to do anything. Otherwise, mark this object as\r\n    // being `deep` and keep going\r\n    if (!force && obj[OBSERVABLE_IDENTIFIER].deep) {\r\n        return;\r\n    }\r\n    else if (walk) {\r\n        obj[OBSERVABLE_IDENTIFIER].deep = true;\r\n    }\r\n\r\n    if (isArray(obj)) {\r\n        walkArray(obj);\r\n    }\r\n    else {\r\n        walkObject(obj);\r\n    }\r\n\r\n    return obj;\r\n}\r\n\r\n\r\nfunction walkArray(arr, force) {\r\n    for (let i=0, t=arr.length; i<t; i++) {\r\n        makeObservable(arr[i], true, force);\r\n    }\r\n}\r\n\r\nfunction walkObject(obj, force) {\r\n    // make ALL props observable\r\n    const keys = objectKeys(obj);\r\n\r\n    for (let i=0, t=keys.length; i<t; i++) {\r\n        if (!obj[OBSERVABLE_IDENTIFIER].props[keys[i]]) {\r\n            setupPropState(obj, keys[i]);\r\n            setupPropInterceptors(obj, keys[i]);\r\n        }\r\n\r\n        // Do we need to walk this property's value?\r\n        if (\r\n            !obj[OBSERVABLE_IDENTIFIER].props[keys[i]].deep ||\r\n            force\r\n        ) {\r\n            obj[OBSERVABLE_IDENTIFIER].props[keys[i]].deep = true;\r\n\r\n            if (isPureObject(obj[keys[i]])) {\r\n                makeObservable(obj[keys[i]], true, force);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction notify() {\r\n    // this: new Set(). Set instance could have two additional attributes: async ++ isQueued\r\n\r\n    if (!this.size) {\r\n        return;\r\n    }\r\n\r\n    // If the watcher Set() is synchronous, then execute the callbacks now\r\n    if (!this.async) {\r\n        this.forEach(execCallback);\r\n\r\n    } else {\r\n        this.forEach(pushCallbacksToQueue);\r\n    }\r\n\r\n    queueCallbackAndScheduleRun();\r\n}\r\n\r\nexport function queueCallbackAndScheduleRun(cb) {\r\n    if (cb) {\r\n        pushCallbacksToQueue(cb);\r\n    }\r\n\r\n    if (isNotifyQueued || !NOTIFY_QUEUE.size) {\r\n        return;\r\n    }\r\n\r\n    isNotifyQueued = true;\r\n    nextTick(flushQueue);\r\n}\r\n\r\nfunction pushCallbacksToQueue(callback) {\r\n    NOTIFY_QUEUE.add(callback);\r\n}\r\n\r\nfunction execCallback(cb) {\r\n    cb();\r\n}\r\n\r\nfunction flushQueue() {\r\n    const queuedCallbacks = [...NOTIFY_QUEUE];\r\n    NOTIFY_QUEUE.clear();\r\n    isNotifyQueued = false;\r\n    for (let x=0, total=queuedCallbacks.length; x<total; x++) {\r\n        queuedCallbacks[x]();\r\n    }\r\n    queuedCallbacks.length = 0;\r\n}\r\n\r\nfunction storeCallback(callback) {\r\n    // this === PropState\r\n    if (callback.asDependent && this.dependents) {\r\n        setCallbackAsWatcherOf(callback, this.dependents);\r\n        this.dependents.add(callback);\r\n    } else {\r\n        setCallbackAsWatcherOf(callback, this.watchers);\r\n        this.watchers.add(callback);\r\n    }\r\n}\r\n\r\nexport function destroyWatcher(callback, propSetup) {\r\n    // this == obj\r\n    if (callback) {\r\n        // Object state does not have dependents\r\n        if (propSetup.dependents) {\r\n            propSetup.dependents.delete(callback);\r\n            unsetCallbackAsWatcherOf(callback, propSetup.dependents);\r\n        }\r\n        propSetup.watchers.delete(callback);\r\n        unsetCallbackAsWatcherOf(callback, propSetup.watchers);\r\n    }\r\n}\r\n\r\n/**\r\n * Sets a callback to be added to the list of watchers for any property\r\n * that is accessed after this function is called.\r\n *\r\n * @param {Function} callback\r\n *  The callback to be added to dependency list of watchers.\r\n *  NOTE: the callback will modified to include a new property\r\n *  `stopWatchingAll()` which can be used to remove the given callback\r\n *  from ALL dependencies that include it.\r\n *\r\n */\r\nexport function setDependencyTracker(callback) {\r\n    TRACKERS.add(callback);\r\n}\r\n\r\n/**\r\n * Removes a callback from being added to a property's watchers as they\r\n * are accessed.\r\n *\r\n * @param {Function} callback\r\n */\r\nexport function unsetDependencyTracker(callback) {\r\n    TRACKERS.delete(callback);\r\n}\r\n\r\n/**\r\n * Removes the given callback from all property watchers lists that it may\r\n * be included in.\r\n *\r\n * @param {Function} callback\r\n */\r\nexport function stopTrackerNotification(callback) {\r\n    if (callback[WATCHER_IDENTIFIER]) {\r\n        callback[WATCHER_IDENTIFIER].stopWatchingAll();\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Store a reference to the Set instance provided on input, on the callback.\r\n * @private\r\n * @param {Function} callback\r\n * @param {Set} watchersSet\r\n */\r\nfunction setCallbackAsWatcherOf(callback, watchersSet) {\r\n    if (!callback[WATCHER_IDENTIFIER]) {\r\n        objectDefineProperty(callback, WATCHER_IDENTIFIER, {\r\n            configurable: true,\r\n            writable: true,\r\n            value: {\r\n                watching: new Set()\r\n            }\r\n        });\r\n        objectDefineProperty(callback, \"stopWatchingAll\", {\r\n            configurable: true,\r\n            writable: true,\r\n            value() {\r\n                callback[WATCHER_IDENTIFIER].watching.forEach(watcherList =>\r\n                    watcherList.delete(callback)\r\n                );\r\n                callback[WATCHER_IDENTIFIER].watching.clear();\r\n            }\r\n        });\r\n    }\r\n\r\n    callback[WATCHER_IDENTIFIER].watching.add(watchersSet);\r\n}\r\n\r\n/**\r\n * Removes the reference to the given Set instance from the callback function provided\r\n * @private\r\n * @param {Function} callback\r\n * @param {Set} watchersSet\r\n */\r\nfunction unsetCallbackAsWatcherOf(callback, watchersSet) {\r\n    if (callback[WATCHER_IDENTIFIER]) {\r\n        callback[WATCHER_IDENTIFIER].watching.delete(watchersSet);\r\n    }\r\n}\r\n\r\n\r\nexport function makeArrayWatchable(arr) {\r\n    if (!arr[OBSERVABLE_IDENTIFIER]) {\r\n        setupObjState(arr);\r\n    }\r\n\r\n    // If array already has a watchable prototype, then exit\r\n    if (arr[HAS_ARRAY_WATCHABLE_PROTO]) {\r\n        return;\r\n    }\r\n\r\n    const arrCurrentProto = arr.__proto__; // eslint-disable-line\r\n\r\n    // Create prototype interceptors?\r\n    if (!arrCurrentProto[ARRAY_WATCHABLE_PROTO]) {\r\n        const arrProtoInterceptor = Object.create(arrCurrentProto);\r\n        ARRAY_MUTATING_METHODS.forEach(method => {\r\n            objectDefineProperty(arrProtoInterceptor, method, {\r\n                configurable: true,\r\n                writable: true,\r\n                value: function arrayMethodInterceptor(...args) {\r\n                    const response = arrCurrentProto[method].call(this, ...args);\r\n                    this[OBSERVABLE_IDENTIFIER].dependents.notify();\r\n                    this[OBSERVABLE_IDENTIFIER].watchers.notify();\r\n                    return response;\r\n                }\r\n            });\r\n        });\r\n\r\n        // VALUE ADD: include a `size` read only attribute\r\n        objectDefineProperty(arrProtoInterceptor, \"size\", {\r\n            configurable: true,\r\n            get() {\r\n                if (TRACKERS.size) {\r\n                    TRACKERS.forEach(\r\n                        this[OBSERVABLE_IDENTIFIER].storeCallback,\r\n                        this[OBSERVABLE_IDENTIFIER]\r\n                    );\r\n                }\r\n                return this.length;\r\n            }\r\n        });\r\n\r\n        // Add flag to new array interceptor prototype indicating its watchable\r\n        objectDefineProperty(arrProtoInterceptor, HAS_ARRAY_WATCHABLE_PROTO, {\r\n            value: true\r\n        });\r\n\r\n        // Store the new interceptor prototype on the real prototype\r\n        objectDefineProperty(arrCurrentProto, ARRAY_WATCHABLE_PROTO, {\r\n            configurable: true,\r\n            writable: true,\r\n            value: arrProtoInterceptor\r\n        });\r\n    }\r\n\r\n    arr.__proto__ = arrCurrentProto[ARRAY_WATCHABLE_PROTO]; // eslint-disable-line\r\n}\r\n\r\n\r\nexport default objectWatchProp;\r\n","/**\r\n * Adds an event handler to a DOM element and returns back an\r\n * object that allows for removal of the event.\r\n *\r\n * @function domAddEventListener\r\n *\r\n * @param {HTMLElement} ele\r\n * @param {String} event\r\n *  The event to listen to (ex. `click`). Multiple events can be defined\r\n *  by separating them with whitespace\r\n * @param {Function} callback\r\n * @param {Boolean} [capture]\r\n *\r\n * @return DOMEventListener\r\n *\r\n * @example\r\n *\r\n * var listener = domAddEventHandler(myEle, \"click\", function(){});\r\n * ...\r\n * listener.remove();\r\n */\r\nexport function domAddEventListener(ele, event, callback, capture) {\r\n    let events      = event.split(/\\s+/);\r\n    let evListeners = {};\r\n\r\n    events.forEach(evName => {\r\n        ele.addEventListener(evName, callback, capture);\r\n        evListeners[evName] = {\r\n            remove: () => ele.removeEventListener(evName, callback, capture)\r\n        }\r\n    });\r\n\r\n    /**\r\n     * A DOM Event listener.\r\n     *\r\n     * @typedef {Object} DOMEventListener\r\n     *\r\n     * @property {Function} remove\r\n     * @property {Object} listeners\r\n     *  List of listeners that were bound to the DOM element. Each listeners has a\r\n     *  corresponding `.remove()` method.\r\n     */\r\n    return Object.create({\r\n        listeners: evListeners,\r\n        remove: function () {\r\n            events.forEach(evName => evListeners[evName].remove());\r\n        }\r\n    });\r\n}\r\nexport default domAddEventListener;\r\n","// POLYFILL FOR WeakMap\r\n//  [pt] changed how \"delete\" is defined so that it can work in IE8\r\n\r\n/* jshint ignore:start */\r\n/**\r\n * @license\r\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\n * Code distributed by Google as part of the polymer project is also\r\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n */\r\nvar FakeWeakMap;\r\nif (typeof WeakMap === 'undefined') {\r\n    (function() {\r\n        var defineProperty = Object.defineProperty;\r\n        var counter = Date.now() % 1e9;\r\n\r\n        var WeakMap = FakeWeakMap = function() {\r\n            this.name = '__st' + (Math.random() * 1e9 >>> 0) + (counter++ + '__');\r\n        };\r\n\r\n        WeakMap.prototype = {\r\n            set: function(key, value) {\r\n                var entry = key[this.name];\r\n                if (entry && entry[0] === key)\r\n                    entry[1] = value;\r\n                else\r\n                    defineProperty(key, this.name, {value: [key, value], writable: true});\r\n                return this;\r\n            },\r\n            get: function(key) {\r\n                var entry;\r\n                return (entry = key[this.name]) && entry[0] === key ?\r\n                    entry[1] : undefined;\r\n            },\r\n            // [pt] Quotes around the delete property needed for IE8\r\n            \"delete\": function(key) {\r\n                var entry = key[this.name];\r\n                if (!entry || entry[0] !== key) return false;\r\n                entry[0] = entry[1] = undefined;\r\n                return true;\r\n            },\r\n            has: function(key) {\r\n                var entry = key[this.name];\r\n                if (!entry) return false;\r\n                return entry[0] === key;\r\n            }\r\n        };\r\n\r\n        window.WeakMap = WeakMap;\r\n    })();\r\n} else {\r\n    FakeWeakMap = WeakMap\r\n}\r\n/* jshint ignore:end */\r\nexport { FakeWeakMap as WeakMap };\r\nexport default FakeWeakMap;\r\n","import {WeakMap} from \"./WeakMap\";\r\n\r\n/**\r\n * Returns an object that contains an initialized WeakMap (`stash` property)\r\n * where data can be stored.\r\n *\r\n * @namespace dataStore\r\n *\r\n */\r\nvar dataStore = /** @lends dataStore */{\r\n    /**\r\n     * Stash data here.\r\n     * @type WeakMap\r\n     */\r\n    stash:  new WeakMap(),\r\n    /**\r\n     * Create a private data store and return it.\r\n     * @return {WeakMap}\r\n     */\r\n    create: function(){\r\n        return new WeakMap();\r\n    }\r\n};\r\n\r\nexport default dataStore;\r\nexport { dataStore };\r\n","import { GLOBAL } from \"./getGlobal\"\r\nimport { FakeIterator } from \"./Iterator\";\r\n\r\n//============================================================\r\nconst UNIQUE = Math.random().toString(36).substring(7);\r\nlet COUNTER = 1;\r\nconst SYMBOL_PROTOTYPE = {\r\n    toString() {\r\n        return `Symbol(${this.description}).${this._id}`;\r\n    },\r\n    valueOf() {\r\n        return this.toString();\r\n    }\r\n};\r\n\r\n\r\nexport const Symbol = GLOBAL.Symbol || FakeSymbol;\r\nexport default Symbol;\r\n\r\nexport function FakeSymbol(description) {\r\n    if (this instanceof FakeSymbol) {\r\n        throw new TypeError(\"FakeSymbol is not a constructor\");\r\n    }\r\n    return Object.create(SYMBOL_PROTOTYPE, {\r\n        description: {\r\n            value: arguments.length ? description : \"\"\r\n        },\r\n        _id: {\r\n            value: `${UNIQUE}.${COUNTER++}`\r\n        }\r\n    });\r\n}\r\n\r\nFakeIterator.iterator = FakeIterator;\r\n","import objectExtend from \"common-micro-libs/src/jsutils/objectExtend\"\r\nimport dataStore from \"common-micro-libs/src/jsutils/dataStore\"\r\nimport objectWatchProp from \"observables/src/objectWatchProp\"\r\nimport { isArray, objectKeys } from \"common-micro-libs/src/jsutils/runtime-aliases\"\r\nimport {Symbol} from \"common-micro-libs/src/jsutils/Symbol\"\r\n\r\n//============================================================================\r\nexport const PRIVATE = dataStore.create();\r\n\r\nexport const STATE_SYMBOL = Symbol(\"state\");\r\n\r\n/**\r\n * Checks if the element has an attribute set that matches any of the aliases for a prop\r\n *\r\n * @param {ComponentElement} ele\r\n * @param {ComponentElement~PropDefinition} propDef\r\n *\r\n * @return {Boolean}\r\n */\r\nexport function elementHasAttributeForProp(ele, propDef) {\r\n    return propDef.aliases.some(propAlias => ele.hasAttribute(propAlias));\r\n}\r\n\r\nexport function geAttributeValueForProp(ele, propDef) {\r\n    let attrVal = \"\";\r\n    propDef.aliases.some(propAlias => {\r\n        if (ele.hasAttribute(propAlias)) {\r\n            attrVal = ele.getAttribute(propAlias);\r\n            return true;\r\n        }\r\n    });\r\n    return attrVal;\r\n}\r\n\r\nexport function getState(instance) {\r\n    if (!PRIVATE.has(instance)) {\r\n        let state = {\r\n            ready: false,           // We have all required params\r\n            readyWatcher: null,\r\n            props: instance.props,\r\n            destroyCallbacks: [],\r\n            destroyQueued: null,\r\n            isMounted: false,\r\n            hasTemplate: false // template has been inserted into component.$ui\r\n        };\r\n\r\n        // Create all props\r\n        const propDefintions    = getPropsDefinition(instance.constructor);\r\n        const required          = objectKeys(propDefintions).filter(propName => !propDefintions[propName]._isAlias && propDefintions[propName].required);\r\n        const setReadyState     = () => {\r\n            if (!required.length || required.every(propName => !!state.props[propName])) {\r\n                state.ready = true;\r\n            }\r\n            else {\r\n                state.ready = false;\r\n            }\r\n        };\r\n\r\n        required.forEach(propName => objectWatchProp(state.props, propName, setReadyState));\r\n        setReadyState();\r\n        PRIVATE.set(instance, state);\r\n    }\r\n    return PRIVATE.get(instance);\r\n}\r\n\r\n\r\n/**\r\n * Returns a kebab-case representation of the given string on input. Essentially, replaces\r\n * each Capital letter with a `-` followed by that letter in lower case.\r\n *\r\n * @param {String} str\r\n *\r\n * @return {String}\r\n *\r\n * @example\r\n *\r\n * getKebabCase(\"Paul\"); // => -paul\r\n * getKebabCase(\"paulTavares\"); // => paul-tavares\r\n */\r\nexport function getKebabCase(str) {\r\n    return str.replace(/([A-Z])/g, (match, p1) => \"-\" + p1.toLowerCase())\r\n}\r\n\r\n\r\n/**\r\n * Given a string in kebab case (ex. paul-tavares), this will return a CamelCase\r\n * representation of that string.\r\n *\r\n * @param {String} str\r\n *\r\n * @return {String}\r\n */\r\nexport function getCamelCase(str) {\r\n    return str.replace(/(-[a-z])/g, (match, p1) => p1.toUpperCase().substr(1))\r\n}\r\n\r\n/**\r\n *\r\n * @param ComponentClass\r\n * @returns {Object<String,ComponentElement~PropDefinition>}\r\n */\r\nexport function getPropsDefinition(ComponentClass) {\r\n    let state = getComponentClassState(ComponentClass);\r\n\r\n    if (!state.propsDef) {\r\n        state.propsDef = {};\r\n\r\n        // The props are stored internally (weakmap) once for the Component Class.\r\n        // The internal definition has the \"aliases\" expanded as well.\r\n        if (ComponentClass.propsDef) {\r\n            objectKeys(ComponentClass.propsDef).forEach(propName => {\r\n                state.propsDef[propName] = ComponentClass.propsDef[propName];\r\n                // expand aliases as well\r\n                if (isArray(state.propsDef[propName].aliases)) {\r\n                    const propAliasDef = objectExtend({}, ComponentClass.propsDef[propName], { _isAlias: true });\r\n                    state.propsDef[propName].aliases.forEach(\r\n                        propNameAlias => !state.propsDef[propNameAlias] &&\r\n                                        (state.propsDef[propNameAlias] = propAliasDef));\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return state.propsDef;\r\n}\r\n\r\n/**\r\n * Returns the internal state for the Component Class\r\n *\r\n * @param {ComponentElement} ComponentClass\r\n *\r\n * @return {Object}\r\n */\r\nexport function getComponentClassState(ComponentClass) {\r\n    if (!PRIVATE.has(ComponentClass)) {\r\n        PRIVATE.set(ComponentClass, {\r\n            propsDef: null,\r\n            template: null,\r\n            observedAttrs: null\r\n        });\r\n    }\r\n    return PRIVATE.get(ComponentClass);\r\n}\r\n\r\n/**\r\n * Returns a clone of the Class's template - ready to be used/inserted\r\n * into a instance of the class\r\n *\r\n * @param {ComponentElement} componentInstance\r\n *\r\n * @return {HTMLElement}\r\n */\r\nexport function getComponentInstanceTemplate(componentInstance) {\r\n    return componentInstance.ownerDocument.importNode(\r\n        getComponentTemplate(componentInstance.constructor).content,\r\n        true\r\n    );\r\n}\r\n\r\n/**\r\n * Returns a `HTMLTemplateElement` that holds the ComponentElement's template\r\n *\r\n * @param {ComponentElement} Component\r\n *  The ComponentElement class\r\n *\r\n * @return {HTMLTemplateElement}\r\n */\r\nexport function getComponentTemplate(Component) {\r\n    if (\"string\" === typeof Component.template) {\r\n        const classState = getComponentClassState(Component);\r\n\r\n        if (!classState.template) {\r\n            classState.template = document.createElement(\"template\");\r\n            classState.template.innerHTML = Component.template;\r\n        }\r\n\r\n        return classState.template;\r\n    }\r\n\r\n    return Component.template;\r\n}\r\n\r\n","//--------------------------------------------------------------\r\n// Utilities to work with polyfills like ShadyCSS\r\n//--------------------------------------------------------------\r\nimport {GLOBAL} from \"common-micro-libs/src/jsutils/getGlobal\"\r\nimport {getComponentTemplate} from \"./utils\"\r\n\r\n//===========================================================================================\r\nconst supportsShadyCSS = () => !!GLOBAL.ShadyCSS;\r\n\r\n// FIXME: code below should check also for native support for CEs (protect against polyfills loaded in a native env?)\r\n\r\n/**\r\n * Prepares the component's styles for the given `define` tag name.\r\n * Method should be called at the time the Element is registered into CustomElementsRegistry\r\n *\r\n * @param {ComponentElement} Component\r\n * @param {String} tagName\r\n */\r\nexport function prepareComponentTemplate(Component, tagName){\r\n    // FIXME: need additional checks here. ONly use shady if ShadowDom is not supported natively.\r\n    //              need to use: ShadyCSS.nativeShadow to check if shadowroot is supported\r\n    //              Also: should we check the Component's \"useShadow\" property?\r\n    if (supportsShadyCSS()) {\r\n        GLOBAL.ShadyCSS.prepareTemplate(getComponentTemplate(Component), tagName);\r\n    }\r\n}\r\n\r\n/**\r\n * Styles the instance of a custom element using ShadyCSS\r\n *\r\n * @param {HTMLElement} componentInstance\r\n */\r\nexport function styleComponentInstanceElement(componentInstance) {\r\n    if (supportsShadyCSS()) {\r\n        GLOBAL.ShadyCSS.styleElement(componentInstance);\r\n    }\r\n}\r\n\r\n/**\r\n * Restyles a component's sub-tree. Use it when DOM might have been altered dynamically\r\n * and polyfilled styles needs to be applied.\r\n *\r\n * @param {HTMLElement} componentInstance\r\n */\r\nexport function reStyleComponentInstanceSubtree(componentInstance) {\r\n    if (supportsShadyCSS()) {\r\n        GLOBAL.ShadyCSS.styleSubtree(componentInstance)\r\n    }\r\n}","import objectExtend from \"common-micro-libs/src/jsutils/objectExtend\"\r\nimport { objectKeys, objectDefineProperty } from \"common-micro-libs/src/jsutils/runtime-aliases\"\r\nimport {objectWatchProp} from \"observables/src/objectWatchProp\"\r\nimport domAddEventListener from \"common-micro-libs/src/domutils/domAddEventListener\"\r\nimport {\r\n    getState,\r\n    PRIVATE,\r\n    getPropsDefinition,\r\n    getComponentInstanceTemplate,\r\n    getComponentClassState,\r\n    elementHasAttributeForProp,\r\n    geAttributeValueForProp\r\n} from \"./utils\"\r\nimport {\r\n    prepareComponentTemplate,\r\n    styleComponentInstanceElement\r\n} from \"./polyfill-support\"\r\n\r\n//============================================================================\r\nconst SHADOW_DOM_SUPPORTED = document.head.createShadowRoot || document.head.attachShadow;\r\nconst EV_DEFAULT_INIT = { bubbles: true, cancelable: true, composed: true };\r\nconst CE_REGISTRY = window.customElements;\r\nconst warn = console.warn; // eslint-disable-line\r\n\r\n\r\n/**\r\n * A generic class for building widgets based on HTML Custom Elements.\r\n *\r\n * @extends HTMLElement\r\n *\r\n */\r\nexport class ComponentElement extends HTMLElement {\r\n    constructor(...args) {\r\n        const self = super(...args) || this;\r\n        setupComponent(self);\r\n        return self;\r\n    }\r\n\r\n    //==============================================================\r\n    //  Static Members\r\n    //==============================================================\r\n\r\n    /**\r\n     * The Component's props definition\r\n     * @name propsDef\r\n     * @type {Object<String,ComponentElement~PropDefinition>}\r\n     */\r\n\r\n    /**\r\n     * Return default registration tag name\r\n     *\r\n     * @type {String}\r\n     */\r\n    static get tagName() { throw new Error(\"tagName not defined\") }\r\n\r\n    /**\r\n     * Registers the web component. Uses tagName as default input param\r\n     */\r\n    static define(name) {\r\n        name = name || this.tagName;\r\n\r\n        prepareComponentTemplate(this, name);\r\n\r\n        if (CE_REGISTRY.get(name)) {\r\n            if (CE_REGISTRY.get(name) !== this) {\r\n                warn(`${name} is already a defined in customElementsRegistry as a different Class`);\r\n            }\r\n            return;\r\n        }\r\n        CE_REGISTRY.define(name, this);\r\n    }\r\n\r\n    /**\r\n     * The number of milliseconds to wait after an element has been detached from DOM before\r\n     * the `.destroy()` method is auto executed.\r\n     *\r\n     * @type {Number}\r\n     */\r\n    static get delayDestroy() { return 250; }\r\n\r\n    /**\r\n     * If Shadow DOM should be used. Default `true`\r\n     *\r\n     * @type {Boolean}\r\n     */\r\n    static get useShadow() { return true; }\r\n\r\n    /**\r\n     * The value for the `mode` option that will be used on the `attachShadow` method.\r\n     *\r\n     * @type {string}\r\n     */\r\n    static get shadowMode() { return \"open\"; }\r\n\r\n    /**\r\n     * Returns the HTML template for the component. Could also be a Template html element\r\n     *\r\n     * @type {String|HTMLTemplateElement}\r\n     */\r\n    static get template() { return \"<div></div>\"; }\r\n\r\n    /**\r\n     * Renderer for the template and return what should be inserted into shadowDom.\r\n     * By default, this base class will simply clone the `template` defined in the\r\n     * static property above. This method will called prior to doing that, and if\r\n     * it returns a `truthy` value, then its assume to be either an HTMLElement or\r\n     * DocumentFragment with the element's instance UI (which will be inserted into\r\n     * shadowDom).\r\n     *\r\n     * **NOTE**: Should always use `getComponentInstanceTemplate` or `getComponentTemplate`\r\n     * to retrieve the template or its content, since it is manipulated in browsers that\r\n     * use the polyfills to make the template compatible in those platforms.\r\n     *\r\n     * @param {ComponentElement} eleInstance\r\n     *  The `ComponentElement` instance being initialized\r\n     *\r\n     * @return {HTMLElement|DocumentFragment}\r\n     */\r\n    static renderTemplate(eleInstance) {\r\n        // FIXME: should two additional params be provided - one to get templateInstance and another to get templateElement?\r\n        return getComponentInstanceTemplate(eleInstance);\r\n    }\r\n\r\n    /**\r\n     * The default initialization options for the `emit()` method.\r\n     * See [Event.contructor]{@link http://devdocs.io/dom/event/event} for more.\r\n     *\r\n     * @type EventInit\r\n     */\r\n    static get eventInitOptions() { return EV_DEFAULT_INIT; }\r\n\r\n    // Returns the list (Array) of props that were marked as `@attr`\r\n    static get observedAttributes() {\r\n        let state = getComponentClassState(this);\r\n\r\n        if (!state.observedAttrs) {\r\n            const propList = getPropsDefinition(this);\r\n            state.observedAttrs = objectKeys(propList).filter(p => propList[p].attr);\r\n        }\r\n\r\n        return state.observedAttrs;\r\n    }\r\n\r\n    //==============================================================\r\n    //  Instance Members\r\n    //==============================================================\r\n\r\n    // Reflects changed html attributes to state.props\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const propsDef =  getPropsDefinition(this.constructor);\r\n        if (propsDef[name]) {\r\n            name = propsDef[name].name;\r\n        }\r\n        this.props[name] = newValue;\r\n    }\r\n\r\n    /**\r\n     * Destroy the instance of the widget\r\n     */\r\n    destroy() {\r\n        if (PRIVATE.has(this)) {\r\n            const state = getState(this);\r\n            PRIVATE.delete(this);\r\n            if (state.destroyQueued) {\r\n                clearTimeout(state.destroyQueued);\r\n                state.destroyQueued = null;\r\n            }\r\n            state.destroyCallbacks.splice(0).forEach(cb => cb());\r\n        }\r\n        if (this.parentNode) {\r\n            this.parentNode.removeChild(this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adds a callback to be executed when Component is destroyed.\r\n     * @param {Function} callback\r\n     */\r\n    onDestroy(callback) {\r\n        getState(this).destroyCallbacks.push(callback);\r\n    }\r\n\r\n    /**\r\n     * The Component's props.\r\n     * @type {Object}\r\n     */\r\n    get props() {\r\n        if (this.constructor.prototype === this) {\r\n            throw new Error(\"can't be used on own prototype\");\r\n        }\r\n\r\n        if (this._$props) {\r\n            return this._$props;\r\n        }\r\n\r\n        // On first call - setup the property on the instance\r\n        const propDefinitions = getPropsDefinition(this.constructor);\r\n        let props = {};\r\n\r\n        objectKeys(propDefinitions).forEach(propName => {\r\n            if (!propDefinitions[propName] || !propDefinitions[propName]._isAlias) {\r\n                let propValue = propDefinitions[propName].default.call(this);\r\n\r\n                if (\r\n                    propDefinitions[propName].attr &&\r\n                    !propDefinitions[propName].boolean &&   // FIXME: need to determine if Boolean attributes are working\r\n                    elementHasAttributeForProp(this, propDefinitions[propName])\r\n                ) {\r\n                    propValue = geAttributeValueForProp(this, propDefinitions[propName]);\r\n                } else if (this.hasOwnProperty(propName)) {\r\n                    // if the current element has a prop by this same name set directly on the instance,\r\n                    // then this implies that it was set prior to the Element being upgraded.\r\n                    propValue = this[propName];\r\n                    delete this[propName]; // this sets functionality back to the getter/setter.\r\n                }\r\n\r\n                objectDefineProperty(props, propName, {\r\n                    configurable: true,\r\n                    enumerable: true,\r\n                    get() {\r\n                        return propValue;\r\n                    },\r\n                    set: newValue => {\r\n                        newValue = propDefinitions[propName].filter.call(this, newValue);\r\n                        return propValue = newValue;\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        objectDefineProperty(this, \"_$props\", { value: props });\r\n        return props;\r\n    }\r\n\r\n    /**\r\n     * Pointer to the UI of the Component. Value is will either be the `showdowRoot` or the element\r\n     * itself.\r\n     *\r\n     * @returns {HTMLElement}\r\n     */\r\n    get $ui() {\r\n        return this._$ui;\r\n    }\r\n\r\n    /**\r\n     * Find an element in the `$ui` (alias for `querySelector()`)\r\n     *\r\n     * @param {String} selector\r\n     *\r\n     * @return {HTMLElement}\r\n     */\r\n    $(selector) {\r\n        return this.$ui.querySelector(selector);\r\n    }\r\n\r\n    /**\r\n     * Returns an array with matched set of DOM elements based on the given selector.\r\n     * (alias for `querySelectorAll()`)\r\n     *\r\n     * @param {String} selector\r\n     *\r\n     * @returns {Array<HTMLElement>}\r\n     */\r\n    $$(selector) {\r\n        const result = this.$ui.querySelectorAll(selector);\r\n        if (Array.isArray(result)) {\r\n            return;\r\n        }\r\n        return Array.prototype.slice.call(result, 0);\r\n    }\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~ LIFE CYCLE HOOKS ~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n    /**\r\n     * Called to initialize the component, but only after only after all required\r\n     * props have been provided.  This method could be called multiple times, if component\r\n     * has been destroyed, but then re-attached to the DOM Tree.\r\n     *\r\n     */\r\n    init() {}\r\n\r\n    /**\r\n     * Component is ready to be started. This means that all required props/param have been provided.\r\n     */\r\n    ready() {}\r\n\r\n    /**\r\n     * Component is not ready, and if already stated, it might need adjusted. This means that not all\r\n     * required props are currently defined.\r\n     */\r\n    unready() {}\r\n\r\n    /**\r\n     * Called only after the component has been initialized (`init()` has been called).\r\n     * This method could be called multiple times depending on whether the element is\r\n     * added/removed from DOM.\r\n     * This is a good place to setup global events and/or initiate retrieval of data.\r\n     */\r\n    mounted() {}\r\n\r\n\r\n    /**\r\n     * Called if component has been initialized (`init()` has run).\r\n     */\r\n    unmounted() {}\r\n\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~ EVENTEMITTER INTERFACE ~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n    /**\r\n     * Dispatches a native `CustomEvent`. The `data` provided will be available\r\n     * in the customEvent.detail property\r\n     *\r\n     * @param {String} eventName\r\n     * @param {*} data\r\n     * @param {EventInit} [eventInit=ComponentElement.eventInitOptions]\r\n     *  Any other options for the CustomEvent initialization.\r\n     *  See [Event.constructor]{@link http://devdocs.io/dom/event/event} for more.\r\n     *\r\n     * @example\r\n     *\r\n     * document.body.addEventListener(\"my-event\", function (ev) { console.log(ev.detail); });\r\n     *\r\n     * // My component\r\n     * myComponent.emit(\"my-event\", { msg: \"hello\" });\r\n     *\r\n     */\r\n    emit(eventName, data, eventInit) {\r\n        this.dispatchEvent(new CustomEvent(\r\n            eventName,\r\n            objectExtend({}, this.constructor.eventInitOptions, eventInit, { detail: data })\r\n        ));\r\n    }\r\n\r\n    /**\r\n     * Set an event listener on the current component\r\n     *\r\n     * @param {String} eventNames\r\n     *  One or more event names to listen for (space delimiter)\r\n     *\r\n     * @param {Function} callback\r\n     *\r\n     * @param {Boolean} [capture=false]\r\n     *\r\n     * @returns {DOMEventListener}\r\n     */\r\n    on(eventNames, callback, capture) {\r\n        return domAddEventListener(this, eventNames, callback, capture);\r\n    }\r\n\r\n    /**\r\n     * Add callback to be called when props change\r\n     *\r\n     * @param {Function} callback\r\n     * @param {String} [propName]\r\n     *  Optional. The specific prop to watch.\r\n     *\r\n     * @return {ObjectUnwatchProp}\r\n     */\r\n    onPropsChange(callback, propName) {\r\n        return objectWatchProp(this.props, propName, callback);\r\n    }\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~ BUITINS ~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n    connectedCallback() {\r\n        styleComponentInstanceElement(this);\r\n\r\n        // Cancel destroy if it is queued\r\n        if (PRIVATE.has(this)) {\r\n            const state = getState(this);\r\n            if (state.destroyQueued) {\r\n                clearTimeout(state.destroyQueued);\r\n                state.destroyQueued = null;\r\n            }\r\n            state.isMounted = true;\r\n            if (state.ready) {\r\n                this.mounted();\r\n            }\r\n        }\r\n        else {\r\n            getState(this).isMounted = true;\r\n            setupComponent(this);\r\n        }\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        // Delay calling .destroy() by 60s, just in case user re-attaches component back to dom.\r\n        // This seems to be currently the only way to ensure attached `onDestroy` logic run when\r\n        // the element is no longer needed.\r\n        if (PRIVATE.has(this)) {\r\n            const state = getState(this);\r\n            if (!state.destroyQueued) {\r\n                state.destroyQueued = setTimeout(this.destroy.bind(this), this.constructor.delayDestroy);\r\n            }\r\n            state.isMounted = false;\r\n            if (state.ready) {\r\n                this.unmounted();\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default ComponentElement;\r\n\r\nfunction setupComponent(component) {\r\n    const state = getState(component);\r\n    let lastReadyState = null;\r\n    const handleReadyChanges = () => {\r\n        if (lastReadyState === state.ready) {\r\n            return;\r\n        }\r\n\r\n        lastReadyState = state.ready;\r\n\r\n        if (state.ready) {\r\n            if (!state.hasTemplate) {\r\n                // component._$ui.innerHTML = component.constructor.template;\r\n                component._$ui.appendChild(\r\n                    component.constructor.renderTemplate(component)\r\n                );\r\n                state.hasTemplate = true;\r\n            }\r\n\r\n            component.ready();\r\n\r\n            if (state.isMounted) {\r\n                component.mounted();\r\n            }\r\n        }\r\n        else if (state.hasTemplate) {\r\n            component.unready();\r\n        }\r\n\r\n    };\r\n\r\n    if (component.constructor.useShadow && SHADOW_DOM_SUPPORTED) {\r\n        if (component.shadowRoot) {\r\n            component._$ui = component.shadowRoot;\r\n        }\r\n        else {\r\n            component._$ui = component.attachShadow({ mode: component.constructor.shadowMode });\r\n        }\r\n    }\r\n    else {\r\n        component._$ui = component;\r\n    }\r\n\r\n    component.init();\r\n\r\n    state.readyWatcher = objectWatchProp(state, \"ready\", handleReadyChanges);\r\n    component.onDestroy(state.readyWatcher);\r\n    handleReadyChanges();\r\n}\r\n","import objectExtend from \"common-micro-libs/src/jsutils/objectExtend\"\r\nimport { objectDefineProperty } from \"common-micro-libs/src/jsutils/runtime-aliases\"\r\nimport { getKebabCase, getPropsDefinition, elementHasAttributeForProp } from \"../utils\"\r\n\r\n//===============================================================================\r\nconst RE_UPPER_CASE_LETTERS = /[A-Z]/;\r\nconst NOOP = val => val;\r\n\r\n/**\r\n * Create a ComponentElement property.\r\n *\r\n * @param {Object} [options]\r\n * @param {Object} [Proto]\r\n * @param {String} [prop]\r\n * @param {Object} [descriptor]\r\n *\r\n * @returns {Function}\r\n */\r\nexport function prop(...args) {\r\n    // Called with options? Return Design function\r\n    if (args.length < 2) {\r\n        return setupProp.bind(null, args[0]);\r\n    }\r\n    return setupProp(null, ...args);\r\n}\r\n\r\n\r\nfunction setupProp(options, Proto, prop, descriptor) {\r\n    let getter = descriptor.get;\r\n    let setter = descriptor.set;\r\n    let propDef;\r\n\r\n    // If prop is defined as `boolean` then ensure that the value stored is\r\n    // always a boolean based upon whether the prop is on the element or not\r\n    // In this case, defined getter/setter is ignored/discarded\r\n    // TODO: is there a use case where calling the real getter/setter is valid?\r\n    if (options && options.boolean) {\r\n        options.attr = true;\r\n\r\n        getter = descriptor.get = function () {\r\n            return elementHasAttributeForProp(this, propDef);\r\n        };\r\n\r\n        setter = descriptor.set = function (value) {\r\n            // When setting the value of this attribute directly on the instance (or instance.props),\r\n            // ensure that element attribute is also adjusted to reflect value.\r\n            // Do this only if the `value` is boolean - because when an attribute is added to the\r\n            // element, its value should be empty string.\r\n            if (\"boolean\" === typeof value) {\r\n                if (value && !elementHasAttributeForProp(this, propDef)) {\r\n                    this.setAttribute(prop, \"\");\r\n                }\r\n                else if (!value && elementHasAttributeForProp(this, propDef)) {\r\n                    this.removeAttribute(prop);\r\n                }\r\n            }\r\n            return elementHasAttributeForProp(this, propDef);\r\n        };\r\n    }\r\n\r\n    propDef = objectExtend(getPropDef(Proto, prop, getter, setter), options);\r\n    descriptor.get = descriptor.set = lazyProp(prop, getter, setter);\r\n\r\n    // Create a instance property for each alias as well\r\n    if (propDef.aliases.length) {\r\n        propDef.aliases.forEach(propAliasName => {\r\n            if (!(propAliasName in Proto)) {\r\n                const aliasPropGetterSetterSetup = lazyProp(propAliasName, getter, setter);\r\n                objectDefineProperty(Proto, propAliasName, {\r\n                    configurable: true,\r\n                    get: aliasPropGetterSetterSetup,\r\n                    set: aliasPropGetterSetterSetup\r\n                });\r\n            }\r\n        })\r\n    }\r\n    return descriptor;\r\n}\r\n\r\n\r\nfunction getClassProps(Proto) {\r\n    if (!Proto.constructor.propsDef) {\r\n        objectDefineProperty(Proto.constructor, \"propsDef\", { configurable: true, writable: true, value: {} })\r\n    }\r\n    return Proto.constructor.propsDef;\r\n}\r\n\r\n/**\r\n * Returns the PropDefinition\r\n *\r\n * @private\r\n *\r\n * @param Proto\r\n * @param name\r\n * @param getter\r\n * @param setter\r\n * @returns ComponentElement~PropDefinition\r\n */\r\nfunction getPropDef(Proto, name, getter, setter) {\r\n    const classProps = getClassProps(Proto);\r\n\r\n    if (!classProps[name]) {\r\n        /**\r\n         * A Class prop definition\r\n         *\r\n         * @typedef {Object} ComponentElement~PropDefinition\r\n         * @property {String} name              Then name of the prop\r\n         * @property {Boolean} attr             Can the prop be set via an HTML attribute\r\n         * @property {Boolean} required         Is the prop required\r\n         * @property {Boolean} boolean          Is the prop value mean to be a boolean (note: also forces `attr` to true)\r\n         * @property {Function} default         Function that returns default value (the `getter` when decorator is used)\r\n         * @property {Function} filter          Function that filters the value being set (the `setter` when decorator is used)\r\n         * @property {Array<String>} aliases    An array of aliases for the prop\r\n         */\r\n        classProps[name] = {\r\n            name,\r\n            attr: false,\r\n            required: false,\r\n            boolean: false,\r\n            default: getter || NOOP,\r\n            filter: setter || NOOP,\r\n            aliases: [\r\n                name.toLowerCase()\r\n            ]\r\n            // _isAlias: --- used in getPropsDefinition()\r\n        };\r\n\r\n        // If the prop name has upper case letters, then its possible that it is\r\n        // defined as camelCase - create ka-bab alias.\r\n        if (RE_UPPER_CASE_LETTERS.test(name)) {\r\n            classProps[name].aliases.push(getKebabCase(name));\r\n        }\r\n    }\r\n\r\n    return classProps[name];\r\n}\r\n\r\n/**\r\n * Return a getter/setter function to be used in a Property descriptor. When invoked first time as\r\n * part of an instance, it will setup the actually get/set function that will persist Props to the\r\n * instance `instance.props`\r\n *\r\n * @private\r\n *\r\n * @param propName\r\n * @param getter\r\n * @param setter\r\n *\r\n * @returns {Function}\r\n */\r\nfunction lazyProp(propName/*, getter, setter*/) { // FIXME: getter/setter not being used?\r\n    const $propName = `_$${ propName }`;\r\n\r\n    return function lazyGetterSetter() {\r\n        const isUpdateMode = arguments.length === 1;\r\n\r\n        if (Object.getOwnPropertyNames(this).indexOf($propName) !== -1) {\r\n            return isUpdateMode ? (this[$propName] = arguments[0]) : this[$propName];\r\n        }\r\n\r\n        // Ensure we write back to\r\n        const writeToPropName = getPropsDefinition(this.constructor)[propName].name;\r\n\r\n        objectDefineProperty(this, $propName, {\r\n            configurable: true,\r\n            get() {\r\n                return this.props[writeToPropName];\r\n            },\r\n            set(newValue) {\r\n                return this.props[writeToPropName] = newValue;\r\n            }\r\n        });\r\n\r\n        // update mode\r\n        if (isUpdateMode) {\r\n            return this[$propName] = arguments[0];\r\n        }\r\n\r\n        return this[$propName];\r\n    };\r\n}\r\n","import {objectDefineProperty} from \"common-micro-libs/src/jsutils/runtime-aliases\";\r\n\r\n/**\r\n * Binds the given attributes to the Class instance on first `get`.\r\n *\r\n * @return {Function|Object}\r\n */\r\nexport function bind(Proto, prop, descriptor) {\r\n    if (Proto && prop && descriptor && \"function\" === typeof descriptor.value) {\r\n        const propFn = descriptor.value;\r\n        const writable = descriptor.writable;\r\n        delete descriptor.value;\r\n        delete descriptor.writable;\r\n\r\n        descriptor.get = function () {\r\n            if (this[`__settingUp:${prop}`]) {\r\n                return;\r\n            }\r\n            this[`__settingUp:${prop}`] = true; // Fuck you IE!\r\n\r\n            const fn = propFn.bind(this);\r\n            objectDefineProperty(this, prop, {\r\n                configurable: descriptor.configurable,\r\n                enumerable: descriptor.enumerable,\r\n                writable: writable,\r\n                value: fn\r\n            });\r\n            delete this[`__settingUp:${prop}`];\r\n            return fn;\r\n        };\r\n        return descriptor;\r\n    }\r\n    return bind; // for when called explicitly with no params: `bind()`\r\n}\r\n","export * from \"./ComponentElement\"\r\nexport * from \"./decorators/prop\"\r\nexport * from \"./decorators/bind\"\r\nexport {\r\n    getState,\r\n    getComponentTemplate,\r\n    getComponentInstanceTemplate,\r\n    STATE_SYMBOL\r\n} from \"./utils\"\r\nexport { ComponentElement as default } from \"./ComponentElement\"\r\n\r\n"],"sourceRoot":""}