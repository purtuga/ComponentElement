{"version":3,"sources":["webpack://__LIB/webpack/bootstrap","webpack://__LIB/./node_modules/@purtuga/common/src/jsutils/getGlobal.js","webpack://__LIB/(webpack)/buildin/global.js","webpack://__LIB/./node_modules/@purtuga/common/src/jsutils/objectExtend.js","webpack://__LIB/./node_modules/@purtuga/common/src/jsutils/nextTick.js","webpack://__LIB/./node_modules/@purtuga/common/src/jsutils/throwIfThisIsPrototype.js","webpack://__LIB/./node_modules/@purtuga/common/src/jsutils/runtime-aliases.js","webpack://__LIB/./node_modules/@purtuga/common/src/domutils/domAddEventListener.js","webpack://__LIB/./node_modules/@purtuga/common/src/domutils/domFind.js","webpack://__LIB/./node_modules/@purtuga/common/src/jsutils/WeakMap.js","webpack://__LIB/./node_modules/@purtuga/common/src/jsutils/dataStore.js","webpack://__LIB/./node_modules/@purtuga/common/src/jsutils/Iterator.js","webpack://__LIB/./node_modules/@purtuga/common/src/jsutils/Symbol.js","webpack://__LIB/./src/Ev.js","webpack://__LIB/./src/utils.js","webpack://__LIB/./src/polyfill-support.js","webpack://__LIB/./src/ComponentElement.js","webpack://__LIB/./src/decorators/prop.js","webpack://__LIB/./src/decorators/bind.js","webpack://__LIB/./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","global","__webpack_exports__","GLOBAL","window","self","Function","g","this","eval","e","OBJECT_TYPE","_toString","toString","_hasOwnProperty","objectExtend","mergeIntoObj","mergeObjects","response","total","length","deepMerge","shift","reIsNativeCode","nextTick","setImediate","test","Promise","resolved","resolve","fn","then","catch","console","error","immediates","processing","push","processPending","setTimeout","isQueued","queuedCallbacks","Set","flushQueue","callbacks","clear","queue","callback","add","throwIfThisIsPrototype","THIS","constructor","Error","functionBindCall","functionBind","objectDefineProperty","objectDefineProperties","defineProperties","objectKeys","keys","obj","prop","setter","configurable","writable","descriptor","set","arr","isArray","Array","consoleLog","forEach","indexOf","splice","log","consoleWarn","warn","SymbolIterator","iterator","HTMLElementPrototype","HTMLElement","doc","document","head","appendChild","insertBefore","hasAttribute","setAttribute","removeAttribute","domAddEventListener","ele","event","capture","events","split","evListeners","evName","addEventListener","remove","removeEventListener","listeners","domFind","domEle","selector","slice","querySelectorAll","FakeWeakMap","WeakMap","counter","Date","now","Math","random","entry","undefined","delete","has","dataStore","stash","FakeIterator","values","idx","next","done","_","nextIdx","UNIQUE","substring","COUNTER","SYMBOL_PROTOTYPE","description","_id","valueOf","FakeSymbol","TypeError","arguments","STATE","Ev","on","getStoreFor","emit","data","inst","Map","PRIVATE","STATE_SYMBOL","elementHasAttributeForProp","propDef","aliases","some","propAlias","getState","instance","state","isCssScopingDone","templateEle","ev","destroyCallbacks","destroyQueued","isMounted","getPropsDefinition","ComponentClass","getComponentClassState","propsDef","statePropsDef","componentPropsDef","propName","propAliasDef","_isAlias","propNameAlias","template","observedAttrs","removeElement","parentNode","removeChild","supportsShadyCSS","ShadyCSS","prepareRenderedContent","renderOutput","eleInstance","createElement","innerHTML","prepareTemplate","tagName","scopeCss","view","importNode","content","textContent","SHADOW_DOM_SUPPORTED","createShadowRoot","attachShadow","EV_DEFAULT_INIT","bubbles","cancelable","composed","CE_REGISTRY","customElements","PROPS_NOOP","freeze","EVENT_ANY","lazySetupUnderway","ComponentElement","args","super","component","useShadow","shadowMode","shadowRoot","_$ui","onPropsChange","_queueUpdate","didInit","setupComponent","[object Object]","define","delayDestroy","process","eventInitOptions","observedAttributes","propList","filter","attr","props","propDefinitions","notifyAnyListeners","notifyPropListeners","propValue","default","boolean","attrVal","getAttribute","geAttributeValueForProp","newValue","hasRequiredProps","required","every","$ui","destroy","clearTimeout","cb","didDestroy","onDestroy","$","querySelector","$$","update","_update","shouldRender","willRender","_setView","render","didRender","__queueUpdate","componentInstance","styleElement","styleComponentInstanceElement","init","didMount","ready","mounted","didUnmount","unmounted","eventName","eventInit","eventNameLowercase","toLowerCase","CustomEvent","detail","dispatchEvent","eventNames","attributeChangedCallback","oldValue","connectedCallback","disconnectedCallback","RE_UPPER_CASE_LETTERS","NOOP","val","options","kind","_propDecorator","initializer","propDefinition","validator","propertyDefinition","str","replace","match","p1","getKebabCase","getPropSetup","newDescriptor","getDecoratorDescriptor","extras","map","aliasName","proxyToPropName","componentPropDefinition","DecoratorDescriptor","placement","finisher","Klass","_bound","decoratorDescriptor","isDoingLazySetup","method","boundMethod","ComponentElement_ComponentElement"],"mappings":"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","file":"component-element.esm.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","\r\nexport const GLOBAL = (() => {\r\n    const undef = 'undefined';\r\n    /* global self, window, global */\r\n    if (typeof window !== undef) { return window; }\r\n    if (typeof global !== undef) { return global; }\r\n    if (typeof self !== undef) { return self; }\r\n    return Function('return this;')();\r\n})();\r\n\r\nexport function getGlobal() {\r\n    return GLOBAL;\r\n}\r\nexport default getGlobal;","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","const OBJECT_TYPE   = \"[object Object]\";\r\nconst _toString     = Function.call.bind(Object.prototype.toString);\r\nconst _hasOwnProperty = Function.call.bind(Object.prototype.hasOwnProperty);\r\n\r\n//============================================================\r\n\r\n/**\r\n * Extends an object with the properties of another.\r\n *\r\n * @param {Object|Boolean} mergeIntoObj\r\n *  The object that will have the properties of every other object provided\r\n *  on input merged into. This can also be a `Boolean`, in which case,\r\n *  a deep merge of objects will be done - argument number 2 will\r\n *  become the `mergeIntoObj`.\r\n * @param {...Object} mergeObjects\r\n *\r\n * @return {Object}\r\n */\r\nexport function objectExtend(mergeIntoObj, ...mergeObjects) {\r\n    let response    = mergeIntoObj || {};\r\n    let total       = mergeObjects.length;\r\n    let deepMerge   = false;\r\n    let i;\r\n    let key;\r\n\r\n    if (typeof mergeIntoObj === \"boolean\") {\r\n        deepMerge   = mergeIntoObj;\r\n        response    = mergeObjects.shift() || {};\r\n        total       = mergeObjects.length;\r\n    }\r\n\r\n    for (i = 0; i < total; i++) {\r\n        if (!mergeObjects[i]) {\r\n            continue;\r\n        }\r\n\r\n        for (key in mergeObjects[i]) {\r\n            if (_hasOwnProperty(mergeObjects[i], key)){\r\n                if (\r\n                    deepMerge &&\r\n                    _toString(response[key]) === OBJECT_TYPE &&\r\n                    _toString(mergeObjects[i][key]) === OBJECT_TYPE\r\n                ) {\r\n                    response[key] = objectExtend( true, response[key], mergeObjects[i][key]);\r\n\r\n                } else {\r\n                    response[key] = mergeObjects[i][key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return response;\r\n}\r\nexport default objectExtend;","/* global setImediate:true */\r\nlet reIsNativeCode = /native code/i;\r\n\r\n/**\r\n * Executes a function at the end of the current event Loop - during micro-task processing\r\n *\r\n * @param {Function} callback\r\n */\r\nlet nextTick = (function(){\r\n    if (typeof setImediate !== \"undefined\" && reIsNativeCode.test(setImediate.toString())) {\r\n        return setImediate;\r\n    }\r\n\r\n    // Native Promsie? Use it.\r\n    if (typeof Promise === 'function' && reIsNativeCode.test(Promise.toString())) {\r\n        let resolved = Promise.resolve();\r\n        return function _nextTickPromise(fn) {\r\n            resolved.then(fn).catch(e => console.error(e)); // eslint-disable-line\r\n        };\r\n    }\r\n\r\n    // fallback to setTimeout\r\n    // From: https://bugzilla.mozilla.org/show_bug.cgi?id=686201#c68\r\n    let immediates = [];\r\n    let processing = false;\r\n\r\n    function processPending() {\r\n        setTimeout(function() {\r\n            immediates.shift()();\r\n            if (immediates.length) {\r\n                processPending();\r\n            } else {\r\n                processing = false;\r\n            }\r\n        }, 0);\r\n    }\r\n\r\n    return function _nextTickSetTimeout(fn) {\r\n        immediates.push(fn);\r\n        if (!processing) {\r\n            processing = true;\r\n            processPending();\r\n        }\r\n    };\r\n})();\r\n\r\nlet isQueued = false;\r\nconst queuedCallbacks = new Set();\r\nlet i, t;\r\nconst flushQueue = () => {\r\n    const callbacks = [ ...queuedCallbacks ];\r\n    queuedCallbacks.clear();\r\n    isQueued = false;\r\n    for (i = 0, t = callbacks.length; i < t; i++) {\r\n        callbacks[i]();\r\n    }\r\n};\r\n\r\n/**\r\n * Queues a callback to be executed on nextTick. Unlike calling `nextTick` directly\r\n * `queue()` will ensure that the same callback is not executed more than once when\r\n * `nextTick` runs.\r\n *\r\n * @param {Function} callback\r\n */\r\nnextTick.queue = callback => {\r\n    queuedCallbacks.add(callback);\r\n    if (!isQueued) {\r\n        isQueued = true;\r\n        nextTick(flushQueue);\r\n    }\r\n};\r\n\r\nexport default nextTick;\r\nexport { nextTick };\r\n","/**\r\n * Check if the given `this` value matches its own Constructor's prototype, and\r\n * if so, throw an error.\r\n * Good to use with lazy properties that set themselves up on first access\r\n *\r\n * @param {Object} THIS\r\n * @throws\r\n */\r\nexport function throwIfThisIsPrototype(THIS) {\r\n    if (THIS.constructor && THIS === THIS.constructor.prototype) {\r\n        throw new Error(\"Can not be accessed directly on constructor.prototype!\");\r\n    }\r\n}","/**\r\n * return a value to a given method\r\n *\r\n * @function\r\n * @param {Function} fn\r\n * @param {*} ctx The context to be assigned to `fn`\r\n * @return {Function}\r\n *\r\n * @example\r\n *\r\n * f = functionBin(function() { console.log(`Hello ${this.name}`); }, { name: \"Jackson\" });\r\n * f(); // => \"Hello Jackson\"\r\n */\r\nexport const functionBind = Function.bind.call.bind(Function.bind);\r\n\r\n/**\r\n * return a bound `.call` to the given method.\r\n *\r\n * @type function\r\n * @param {Function} fn\r\n * @return {Function}\r\n * @example\r\n *\r\n * forEach = functionBindCall(Array.prototype.forEach);\r\n * // same as doing: Array.prototype.forEach.call (but returns a new \"call\" method);\r\n */\r\nexport const functionBindCall = functionBind(Function.call.bind, Function.call);\r\n\r\n// Object ===============================================================================\r\nexport const isObject                 = obj => Object.prototype.toString.call(obj) === \"[object Object]\";\r\nexport const objectDefineProperty     = Object.defineProperty;\r\nexport const objectDefineProperties   = Object.defineProperties;\r\nexport const objectKeys               = Object.keys;\r\nexport const defineProperty = (obj, prop, value, getter, setter, configurable = true, enumerable = false, writable = true) => {\r\n    const descriptor = {\r\n        configurable,\r\n        enumerable\r\n    };\r\n\r\n    if (getter || setter) {\r\n        descriptor.get = getter;\r\n        descriptor.set = setter;\r\n    } else {\r\n        descriptor.writable = writable;\r\n        descriptor.value = value;\r\n    }\r\n\r\n    objectDefineProperty(obj, prop, descriptor);\r\n\r\n    return obj;\r\n};\r\n\r\n\r\n// Array ===============================================================================\r\nconst arr = [];\r\nexport const isArray        = Array.isArray;\r\nexport const arrayForEach   = functionBindCall(arr.forEach);\r\nexport const arrayIndexOf   = functionBindCall(arr.indexOf);\r\nexport const arraySplice    = functionBindCall(arr.splice);\r\n\r\n\r\n// Logging ===============================================================================\r\nexport const consoleLog = console.log; // eslint-disable-line\r\nexport const consoleError = console.error || consoleLog; // eslint-disable-line\r\nexport const consoleWarn = console.warn || consoleLog; // eslint-disable-line\r\n\r\n\r\n// Iterators ===============================================================================\r\nexport const SymbolIterator = \"undefined\" !== typeof Symbol && Symbol.iterator ? Symbol.iterator : \"@@iterator\";\r\n\r\n\r\n// DOM ===============================================================================\r\nconst HTMLElementPrototype = HTMLElement.prototype;\r\nexport const doc = document;\r\nexport const head = doc.head;\r\nexport const createDocFragment = () => doc.createDocumentFragment();\r\nexport const createElement = tagName => doc.createElement(tagName);\r\nexport const createTextNode = data => doc.createTextNode(data || \"\");\r\nexport const appendChild = functionBindCall(HTMLElementPrototype.appendChild);\r\nexport const insertBefore = functionBindCall(HTMLElementPrototype.insertBefore);\r\nexport const hasAttribute = functionBindCall(HTMLElementPrototype.hasAttribute);\r\nexport const setAttribute = functionBindCall(HTMLElementPrototype.setAttribute);\r\nexport const removeAttribute = functionBindCall(HTMLElementPrototype.removeAttribute);","/**\r\n * Adds an event handler to a DOM element and returns back an\r\n * object that allows for removal of the event.\r\n *\r\n * @function domAddEventListener\r\n *\r\n * @param {HTMLElement} ele\r\n * @param {String} event\r\n *  The event to listen to (ex. `click`). Multiple events can be defined\r\n *  by separating them with whitespace\r\n * @param {Function} callback\r\n * @param {Boolean} [capture]\r\n *\r\n * @return DOMEventListener\r\n *\r\n * @example\r\n *\r\n * var listener = domAddEventHandler(myEle, \"click\", function(){});\r\n * ...\r\n * listener.remove();\r\n */\r\nexport function domAddEventListener(ele, event, callback, capture) {\r\n    let events      = event.split(/\\s+/);\r\n    let evListeners = {};\r\n\r\n    events.forEach(evName => {\r\n        ele.addEventListener(evName, callback, capture);\r\n        evListeners[evName] = {\r\n            remove: () => ele.removeEventListener(evName, callback, capture)\r\n        }\r\n    });\r\n\r\n    /**\r\n     * A DOM Event listener.\r\n     *\r\n     * @typedef {Object} DOMEventListener\r\n     *\r\n     * @property {Function} remove\r\n     * @property {Object} listeners\r\n     *  List of listeners that were bound to the DOM element. Each listeners has a\r\n     *  corresponding `.remove()` method.\r\n     */\r\n    return Object.create({\r\n        listeners: evListeners,\r\n        remove: function () {\r\n            events.forEach(evName => evListeners[evName].remove());\r\n        }\r\n    });\r\n}\r\nexport default domAddEventListener;\r\n","/**\r\n * Finds Elements within a given HTML Element using `querySelectorAll` and\r\n * return an Array with those elements.\r\n *\r\n * @function domFind\r\n *\r\n * @param {HTMLElement} domEle\r\n * @param {String} selector\r\n *\r\n * @returns {Array<HTMLElement>}\r\n */\r\nexport function domFind(domEle, selector){\r\n    return Array.prototype.slice.call(domEle.querySelectorAll(selector));\r\n}\r\nexport default domFind;\r\n","// POLYFILL FOR WeakMap\r\n//  [pt] changed how \"delete\" is defined so that it can work in IE8\r\n\r\n/* jshint ignore:start */\r\n/**\r\n * @license\r\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\n * Code distributed by Google as part of the polymer project is also\r\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n */\r\nvar FakeWeakMap;\r\nif (typeof WeakMap === 'undefined') {\r\n    (function() {\r\n        var defineProperty = Object.defineProperty;\r\n        var counter = Date.now() % 1e9;\r\n\r\n        var WeakMap = FakeWeakMap = function() {\r\n            this.name = '__st' + (Math.random() * 1e9 >>> 0) + (counter++ + '__');\r\n        };\r\n\r\n        WeakMap.prototype = {\r\n            set: function(key, value) {\r\n                var entry = key[this.name];\r\n                if (entry && entry[0] === key)\r\n                    entry[1] = value;\r\n                else\r\n                    defineProperty(key, this.name, {value: [key, value], writable: true});\r\n                return this;\r\n            },\r\n            get: function(key) {\r\n                var entry;\r\n                return (entry = key[this.name]) && entry[0] === key ?\r\n                    entry[1] : undefined;\r\n            },\r\n            // [pt] Quotes around the delete property needed for IE8\r\n            \"delete\": function(key) {\r\n                var entry = key[this.name];\r\n                if (!entry || entry[0] !== key) return false;\r\n                entry[0] = entry[1] = undefined;\r\n                return true;\r\n            },\r\n            has: function(key) {\r\n                var entry = key[this.name];\r\n                if (!entry) return false;\r\n                return entry[0] === key;\r\n            }\r\n        };\r\n\r\n        window.WeakMap = WeakMap;\r\n    })();\r\n} else {\r\n    FakeWeakMap = WeakMap\r\n}\r\n/* jshint ignore:end */\r\nexport { FakeWeakMap as WeakMap };\r\nexport default FakeWeakMap;\r\n","import {WeakMap} from \"./WeakMap\";\r\n\r\n/**\r\n * Returns an object that contains an initialized WeakMap (`stash` property)\r\n * where data can be stored.\r\n *\r\n * @namespace dataStore\r\n *\r\n */\r\nvar dataStore = /** @lends dataStore */{\r\n    /**\r\n     * Stash data here.\r\n     * @type WeakMap\r\n     */\r\n    stash:  new WeakMap(),\r\n    /**\r\n     * Create a private data store and return it.\r\n     * @return {WeakMap}\r\n     */\r\n    create: function(){\r\n        return new WeakMap();\r\n    }\r\n};\r\n\r\nexport default dataStore;\r\nexport { dataStore };\r\n","import {\r\n    objectDefineProperty,\r\n    objectDefineProperties,\r\n    SymbolIterator\r\n} from \"./runtime-aliases\"\r\n\r\n//-----------------------------------------------------------------------\r\n\r\n// Great reference: http://2ality.com/2015/02/es6-iteration.html\r\nexport function FakeIterator(keys, values) {\r\n    objectDefineProperty(this, \"_\", { value: {\r\n        keys:   keys.slice(0),\r\n        values: values ? values.slice(0) : null,\r\n        idx:    0,\r\n        total:  keys.length\r\n    } });\r\n}\r\nexport default FakeIterator;\r\n\r\nobjectDefineProperties(FakeIterator.prototype, {\r\n    constructor: { value: FakeIterator },\r\n    next: {\r\n        enumerable: true,\r\n        configurable: true,\r\n        value() {\r\n            const response = {\r\n                done: this._.idx === this._.total\r\n            };\r\n\r\n            if (response.done) {\r\n                response.value = undefined;\r\n                return response;\r\n            }\r\n\r\n            const nextIdx = this._.idx++;\r\n\r\n            response.value = this._.keys[nextIdx];\r\n\r\n            if (this._.values) {\r\n                response.value = [ response.value, this._.values[nextIdx] ];\r\n            }\r\n\r\n            return response;\r\n        }\r\n    }\r\n});\r\nobjectDefineProperty(FakeIterator.prototype, SymbolIterator, { value(){ return this; } });\r\n\r\n","import { GLOBAL } from \"./getGlobal\"\r\nimport { FakeIterator } from \"./Iterator\";\r\n\r\n//============================================================\r\nconst UNIQUE = Math.random().toString(36).substring(7);\r\nlet COUNTER = 1;\r\nconst SYMBOL_PROTOTYPE = {\r\n    toString() {\r\n        return `Symbol(${this.description}).${this._id}`;\r\n    },\r\n    valueOf() {\r\n        return this.toString();\r\n    }\r\n};\r\n\r\n\r\nexport const Symbol = GLOBAL.Symbol || FakeSymbol;\r\nexport default Symbol;\r\n\r\nexport function FakeSymbol(description) {\r\n    if (this instanceof FakeSymbol) {\r\n        throw new TypeError(\"FakeSymbol is not a constructor\");\r\n    }\r\n    return Object.create(SYMBOL_PROTOTYPE, {\r\n        description: {\r\n            value: arguments.length ? description : \"\"\r\n        },\r\n        _id: {\r\n            value: `${UNIQUE}.${COUNTER++}`\r\n        }\r\n    });\r\n}\r\n\r\nFakeIterator.iterator = FakeIterator;\r\n","const STATE = Symbol(\"state\");\r\n\r\n/**\r\n * Supper tiny Eventemmiter\r\n */\r\nexport class Ev {\r\n    on(evName, callback) {\r\n        getStoreFor(this, evName).add(callback);\r\n        return () => getStoreFor(this, evName).delete(callback);\r\n    }\r\n    emit(evName, data) {\r\n        getStoreFor(this, evName).forEach(callback => callback(data));\r\n    }\r\n    clear() {\r\n        getStoreFor(this).clear();\r\n    }\r\n}\r\n\r\n/**\r\n * @return {Set}\r\n */\r\nfunction getStoreFor(inst, evName) {\r\n    if (!inst[STATE]) {\r\n        inst[STATE] = new Map();\r\n    }\r\n    if (!evName) {\r\n        return inst[STATE];\r\n    }\r\n    if (!inst[STATE].has(evName)) {\r\n        inst[STATE].set(evName, new Set());\r\n    }\r\n    return inst[STATE].get(evName);\r\n}","import objectExtend from \"@purtuga/common/src/jsutils/objectExtend\"\r\nimport dataStore from \"@purtuga/common/src/jsutils/dataStore\"\r\nimport { isArray, objectKeys } from \"@purtuga/common/src/jsutils/runtime-aliases\"\r\nimport {Symbol} from \"@purtuga/common/src/jsutils/Symbol\"\r\nimport {Ev} from \"./Ev.js\";\r\n//============================================================================\r\nexport const PRIVATE = dataStore.create();\r\n\r\nexport const STATE_SYMBOL = Symbol(\"state\");\r\n\r\n/**\r\n * Checks if the element has an attribute set that matches any of the aliases for a prop\r\n *\r\n * @param {ComponentElement} ele\r\n * @param {ComponentElement~PropDefinition} propDef\r\n *\r\n * @return {Boolean}\r\n */\r\nexport function elementHasAttributeForProp(ele, propDef) {\r\n    return propDef.aliases.some(propAlias => ele.hasAttribute(propAlias));\r\n}\r\n\r\n/**\r\n * Get the prop value from the possible HTML attributes (propName + aliases)\r\n *\r\n * @param ele\r\n * @param propDef\r\n * @returns {string}\r\n */\r\nexport function geAttributeValueForProp(ele, propDef) {\r\n    let attrVal = \"\";\r\n    propDef.aliases.some(propAlias => {\r\n        if (ele.hasAttribute(propAlias)) {\r\n            attrVal = ele.getAttribute(propAlias);\r\n            return true;\r\n        }\r\n    });\r\n    return attrVal;\r\n}\r\n\r\nexport function getState(instance) {\r\n    if (!PRIVATE.has(instance)) {\r\n        let state = {\r\n            isCssScopingDone: false,\r\n            templateEle: null,\r\n            ev: new Ev(),\r\n            destroyCallbacks: [],\r\n            destroyQueued: null,\r\n            isMounted: false\r\n        };\r\n\r\n        PRIVATE.set(instance, state);\r\n    }\r\n    return PRIVATE.get(instance);\r\n}\r\n\r\n\r\n/**\r\n * Returns a kebab-case representation of the given string on input. Essentially, replaces\r\n * each Capital letter with a `-` followed by that letter in lower case.\r\n *\r\n * @param {String} str\r\n *\r\n * @return {String}\r\n *\r\n * @example\r\n *\r\n * getKebabCase(\"Paul\"); // => -paul\r\n * getKebabCase(\"paulTavares\"); // => paul-tavares\r\n */\r\nexport function getKebabCase(str) {\r\n    return str.replace(/([A-Z])/g, (match, p1) => \"-\" + p1.toLowerCase())\r\n}\r\n\r\n\r\n/**\r\n * Given a string in kebab case (ex. paul-tavares), this will return a CamelCase\r\n * representation of that string.\r\n *\r\n * @param {String} str\r\n *\r\n * @return {String}\r\n */\r\nexport function getCamelCase(str) {\r\n    return str.replace(/(-[a-z])/g, (match, p1) => p1.toUpperCase().substr(1))\r\n}\r\n\r\n/**\r\n *\r\n * @param ComponentClass\r\n * @returns {Object<String,ComponentElement~PropDefinition>}\r\n */\r\nexport function getPropsDefinition(ComponentClass) {\r\n    let state = getComponentClassState(ComponentClass);\r\n\r\n    if (!state.propsDef) {\r\n        const statePropsDef = state.propsDef = {};\r\n        const componentPropsDef = ComponentClass.propsDef;\r\n\r\n        // The props are stored internally (weakmap) once for the Component Class.\r\n        // The internal definition has the \"aliases\" expanded as well.\r\n        if (componentPropsDef) {\r\n            objectKeys(componentPropsDef).forEach(propName => {\r\n                statePropsDef[propName] = componentPropsDef[propName];\r\n                // expand aliases as well\r\n                if (isArray(statePropsDef[propName].aliases)) {\r\n                    const propAliasDef = objectExtend({}, componentPropsDef[propName], { _isAlias: true });\r\n                    statePropsDef[propName].aliases.forEach(\r\n                        propNameAlias => !statePropsDef[propNameAlias] &&\r\n                                        (statePropsDef[propNameAlias] = propAliasDef));\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return state.propsDef;\r\n}\r\n\r\n/**\r\n * Returns the internal state for the Component Class\r\n *\r\n * @param {ComponentElement} ComponentClass\r\n *\r\n * @return {Object}\r\n */\r\nexport function getComponentClassState(ComponentClass) {\r\n    if (!PRIVATE.has(ComponentClass)) {\r\n        PRIVATE.set(ComponentClass, {\r\n            propsDef: null,\r\n            template: null,\r\n            observedAttrs: null\r\n        });\r\n    }\r\n    return PRIVATE.get(ComponentClass);\r\n}\r\n\r\n\r\n","//--------------------------------------------------------------\r\n// Utilities to work with polyfills like ShadyCSS\r\n//--------------------------------------------------------------\r\nimport {GLOBAL} from \"@purtuga/common/src/jsutils/getGlobal\"\r\nimport {domFind} from \"@purtuga/common/src/domutils/domFind.js\"\r\nimport {getState} from \"./utils\"\r\n\r\n//===========================================================================================\r\nconst removeElement = ele => ele.parentNode.removeChild(ele);\r\nexport const supportsShadyCSS = () => !!GLOBAL.ShadyCSS;\r\n\r\n/**\r\n * Scopes the CSS of a given template for the Component by using ShadyCSS.\r\n *\r\n * @param template\r\n * @param eleInstance\r\n */\r\nexport function scopeCss (template, eleInstance) {\r\n    if (supportsShadyCSS()) {\r\n        GLOBAL.ShadyCSS.prepareTemplate(template, eleInstance.constructor.tagName);\r\n    }\r\n}\r\n\r\n/**\r\n * Prepares the rendered content by removing style elements - since they were sopped\r\n * during `scopeCss`\r\n *\r\n * @param renderedContent\r\n * @param componentInstance\r\n */\r\nexport function prepareRenderedContent(renderOutput, eleInstance) {\r\n    if (supportsShadyCSS()) {\r\n        const state = getState(eleInstance);\r\n\r\n        if (!state.templateEle) {\r\n            state.templateEle = document.createElement(\"template\");\r\n        }\r\n\r\n        state.templateEle.innerHTML = \"\";\r\n\r\n        // TODO: any momoization can happen here?\r\n\r\n        if (\"string\" === typeof renderOutput) {\r\n            state.templateEle.innerHTML = renderOutput;\r\n        } else {\r\n            state.templateEle.appendChild(renderOutput);\r\n        }\r\n\r\n        if (!state.isCssScopingDone) {\r\n            state.isCssScopingDone = true;\r\n            scopeCss(state.templateEle, eleInstance)\r\n        }\r\n\r\n        const view = document.importNode(state.templateEle.content, true);\r\n        state.templateEle.textContent = \"\";\r\n\r\n        // Remove <style> element\r\n        domFind(view, \"style\").forEach(removeElement);\r\n        return view;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Styles the instance of a custom element using ShadyCSS\r\n *\r\n * @param {HTMLElement} componentInstance\r\n */\r\nexport function styleComponentInstanceElement(componentInstance) {\r\n    if (supportsShadyCSS()) {\r\n        GLOBAL.ShadyCSS.styleElement(componentInstance);\r\n    }\r\n}\r\n\r\n/**\r\n * Restyles a component's sub-tree. Use it when DOM might have been altered dynamically\r\n * and polyfilled styles needs to be applied.\r\n *\r\n * @param {HTMLElement} componentInstance\r\n */\r\nexport function reStyleComponentInstanceSubtree(componentInstance) {\r\n    if (supportsShadyCSS()) {\r\n        GLOBAL.ShadyCSS.styleSubtree(componentInstance)\r\n    }\r\n}","import objectExtend from \"@purtuga/common/src/jsutils/objectExtend\"\r\nimport {nextTick} from \"@purtuga/common/src/jsutils/nextTick.js\"\r\nimport {throwIfThisIsPrototype} from \"@purtuga/common/src/jsutils/throwIfThisIsPrototype.js\"\r\nimport {\r\n    objectKeys,\r\n    defineProperty,\r\n    consoleWarn,\r\n    head\r\n} from \"@purtuga/common/src/jsutils/runtime-aliases\"\r\nimport domAddEventListener from \"@purtuga/common/src/domutils/domAddEventListener\"\r\nimport domFind from \"@purtuga/common/src/domutils/domFind\"\r\nimport {\r\n    getState,\r\n    PRIVATE,\r\n    getPropsDefinition,\r\n    getComponentClassState,\r\n    elementHasAttributeForProp,\r\n    geAttributeValueForProp\r\n} from \"./utils\"\r\nimport {\r\n    styleComponentInstanceElement,\r\n    prepareRenderedContent\r\n} from \"./polyfill-support\"\r\n\r\n//============================================================================\r\nconst SHADOW_DOM_SUPPORTED = head.createShadowRoot || head.attachShadow;\r\nconst EV_DEFAULT_INIT = { bubbles: true, cancelable: true, composed: true };\r\nconst CE_REGISTRY = window.customElements;\r\nconst PROPS_NOOP = Object.freeze(Object.create(null));\r\nconst EVENT_ANY = Symbol(\"ev.props.any\");\r\nlet lazySetupUnderway = false;\r\n\r\n/**\r\n * A generic class for building widgets based on HTML Custom Elements.\r\n *\r\n * @extends HTMLElement\r\n *\r\n */\r\nexport class ComponentElement extends HTMLElement {\r\n    constructor(...args) {\r\n        const self = super(...args) || this;\r\n        setupComponent(self);\r\n        return self;\r\n    }\r\n\r\n    //==============================================================\r\n    //  Static Members\r\n    //==============================================================\r\n\r\n    /**\r\n     * The Component's props definition\r\n     * @name propsDef\r\n     * @type {Object<String,ComponentElement~PropDefinition>}\r\n     */\r\n    static propsDef = PROPS_NOOP;\r\n\r\n    /**\r\n     * Return default registration tag name\r\n     *\r\n     * @type {String}\r\n     */\r\n    static get tagName() { throw new Error(\"tagName not defined\") }\r\n\r\n    /**\r\n     * Registers the web component. Uses tagName as default input param\r\n     */\r\n    static define(name) {\r\n        name = name || this.tagName;\r\n\r\n        if (CE_REGISTRY.get(name)) {\r\n            if (CE_REGISTRY.get(name) !== this) {\r\n                consoleWarn(`${name} is already a defined in customElementsRegistry as a different Class`);\r\n            }\r\n            return;\r\n        }\r\n\r\n        CE_REGISTRY.define(name, this);\r\n    }\r\n\r\n    /**\r\n     * The number of milliseconds to wait after an element has been detached from DOM before\r\n     * the `.destroy()` method is auto executed.\r\n     *\r\n     * @type {Number}\r\n     */\r\n    static get delayDestroy() { return 0; }\r\n\r\n    /**\r\n     * If Shadow DOM should be used. Default `true`\r\n     *\r\n     * @type {Boolean}\r\n     */\r\n    static get useShadow() { return true; }\r\n\r\n    /**\r\n     * The value for the `mode` option that will be used on the `attachShadow` method.\r\n     *\r\n     * @type {string}\r\n     */\r\n    static get shadowMode() { return \"open\"; }\r\n\r\n    /**\r\n     * Returns the HTML template for the component. Could also be a Template html element\r\n     *\r\n     * @type {String|HTMLTemplateElement}\r\n     */\r\n    static get template() {\r\n        // fixme: remove post v2.\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            consoleWarn(`${this.name}.template is Deprecated! Use .render() method`);\r\n        }\r\n        return \"<div></div>\";\r\n    }\r\n\r\n    /**\r\n     * Renderer for the template and return what should be inserted into shadowDom.\r\n     * By default, this base class will simply clone the `template` defined in the\r\n     * static property above. This method will called prior to doing that, and if\r\n     * it returns a `truthy` value, then its assume to be either an HTMLElement or\r\n     * DocumentFragment with the element's instance UI (which will be inserted into\r\n     * shadowDom).\r\n     *\r\n     * **NOTE**: Should always use `getComponentInstanceTemplate` or `getComponentTemplate`\r\n     * to retrieve the template or its content, since it is manipulated in browsers that\r\n     * use the polyfills to make the template compatible in those platforms.\r\n     *\r\n     * @param {ComponentElement} eleInstance\r\n     *  The `ComponentElement` instance being initialized\r\n     *\r\n     * @return {HTMLElement|DocumentFragment}\r\n     */\r\n    static renderTemplate(/*eleInstance*/) {\r\n        // FIXME: remove post v2.\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            consoleWarn(`${this.name}.renderTemplate is NO LONGER SUPPORTED! Use .render() method`);\r\n        }\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * The default initialization options for the `emit()` method.\r\n     * See [Event.contructor]{@link http://devdocs.io/dom/event/event} for more.\r\n     *\r\n     * @type EventInit\r\n     */\r\n    static get eventInitOptions() { return EV_DEFAULT_INIT; }\r\n\r\n    // Returns the list (Array) of props that were marked as `@attr`\r\n    static get observedAttributes() {\r\n        let state = getComponentClassState(this);\r\n\r\n        if (!state.observedAttrs) {\r\n            const propList = getPropsDefinition(this);\r\n            state.observedAttrs = objectKeys(propList).filter(p => propList[p].attr);\r\n        }\r\n\r\n        return state.observedAttrs;\r\n    }\r\n\r\n    //==============================================================\r\n    //  Instance Members\r\n    //==============================================================\r\n\r\n    /**\r\n     * The Component's props.\r\n     * @type {Object}\r\n     */\r\n    get props() {\r\n        throwIfThisIsPrototype(this);\r\n\r\n        if (lazySetupUnderway) {\r\n            return undefined;\r\n        }\r\n\r\n        lazySetupUnderway = true;\r\n\r\n        const propDefinitions = getPropsDefinition(this.constructor);\r\n        let props = {};\r\n        const ev = getState(this).ev;\r\n        const notifyAnyListeners = () => ev.emit(EVENT_ANY);\r\n\r\n        objectKeys(propDefinitions).forEach(propName => {\r\n            if (!propDefinitions[propName] || !propDefinitions[propName]._isAlias) {\r\n                const notifyPropListeners = () => ev.emit(propName);\r\n                let propValue = propDefinitions[propName].default.call(this);\r\n\r\n                if (\r\n                    propDefinitions[propName].attr &&\r\n                    !propDefinitions[propName].boolean &&\r\n                    elementHasAttributeForProp(this, propDefinitions[propName])\r\n                ) {\r\n                    propValue = geAttributeValueForProp(this, propDefinitions[propName]);\r\n                } else if (this.hasOwnProperty(propName)) {\r\n                    // if the current element has a prop by this same name set directly on the instance,\r\n                    // then this implies that it was set prior to the Element being upgraded.\r\n                    propValue = this[propName];\r\n                    delete this[propName]; // this sets functionality back to the getter/setter.\r\n                }\r\n\r\n                // FIXME: convert this call to defineProperty()\r\n                defineProperty(\r\n                    props,\r\n                    propName,\r\n                    undefined,\r\n                    function getProp () {\r\n                        return propValue;\r\n                    },\r\n                    newValue => {\r\n                        newValue = propDefinitions[propName].filter.call(this, newValue);\r\n                        nextTick.queue(notifyPropListeners);\r\n                        nextTick.queue(notifyAnyListeners);\r\n                        return propValue = newValue;\r\n                    },\r\n                    true,\r\n                    true\r\n                );\r\n            }\r\n        });\r\n\r\n        defineProperty(this, \"props\", props, undefined, undefined, true, true, false);\r\n        lazySetupUnderway = false;\r\n\r\n        return props;\r\n    }\r\n\r\n    /**\r\n     * Returns a boolean indicating if Component has all required props fulfilled\r\n     */\r\n    get hasRequiredProps() {\r\n        throwIfThisIsPrototype(this);\r\n        return objectKeys(this.constructor.propsDef)\r\n            .filter(propName => this.constructor.propsDef[propName].required)\r\n            .every(propName => !!this.props[propName]);\r\n    }\r\n\r\n    /**\r\n     * returns a boolean indicating if component is connected to DOM\r\n     * @return {Boolean}\r\n     */\r\n    get isMounted() {\r\n        throwIfThisIsPrototype(this);\r\n        return getState(this).isMounted\r\n    }\r\n\r\n    /**\r\n     * Pointer to the UI of the Component. Value is will either be the `showdowRoot` or the element\r\n     * itself.\r\n     *\r\n     * @returns {HTMLElement}\r\n     */\r\n    get $ui() {\r\n        return this._$ui;\r\n    }\r\n\r\n    /**\r\n     * Destroy the instance of the widget\r\n     */\r\n    destroy() {\r\n        if (PRIVATE.has(this)) {\r\n            const state = getState(this);\r\n            PRIVATE.delete(this);\r\n            if (state.destroyQueued) {\r\n                clearTimeout(state.destroyQueued);\r\n                state.destroyQueued = null;\r\n            }\r\n            state.destroyCallbacks.splice(0).forEach(cb => cb());\r\n        }\r\n        if (this.parentNode) {\r\n            this.parentNode.removeChild(this);\r\n        }\r\n        this.didDestroy();\r\n    }\r\n\r\n    /**\r\n     * Adds a callback to be executed when Component is destroyed.\r\n     * @param {Function} callback\r\n     */\r\n    onDestroy(callback) {\r\n        getState(this).destroyCallbacks.push(callback);\r\n    }\r\n\r\n\r\n    /**\r\n     * Find an element in the `$ui` (alias for `querySelector()`)\r\n     *\r\n     * @param {String} selector\r\n     *\r\n     * @return {HTMLElement}\r\n     */\r\n    $(selector) {\r\n        return this.$ui.querySelector(selector);\r\n    }\r\n\r\n    /**\r\n     * Returns an array with matched set of DOM elements based on the given selector.\r\n     * (alias for `querySelectorAll()`)\r\n     *\r\n     * @param {String} selector\r\n     *\r\n     * @returns {Array<HTMLElement>}\r\n     */\r\n    $$(selector) {\r\n        return domFind(this.$ui, selector);\r\n    }\r\n\r\n    /**\r\n     * Updates the component's DOM by running through the render lifecycle of:\r\n     *\r\n     *  `willRender()`\r\n     *  `render()`\r\n     *  `didRender()`\r\n     *\r\n     * This method probably should not be called directly. It is automatically\r\n     * called when props change\r\n     */\r\n    get update() {\r\n        throwIfThisIsPrototype(this);\r\n\r\n        if (lazySetupUnderway) {\r\n            return undefined;\r\n        }\r\n\r\n        const _update = () => {\r\n            if (!this.isMounted) {\r\n                return;\r\n            }\r\n\r\n            const shouldRender = this.willRender();\r\n\r\n            if (\"boolean\" !== typeof shouldRender || shouldRender) {\r\n                this._setView(this.render());\r\n                this.didRender();\r\n            }\r\n        };\r\n\r\n        lazySetupUnderway = true;\r\n        defineProperty(this, \"update\", _update);\r\n        lazySetupUnderway = false;\r\n\r\n        return _update;\r\n    }\r\n\r\n    /**\r\n     * An instance bound method used to queue the render update cycle\r\n     * @type Function\r\n     * @private\r\n     */\r\n    get _queueUpdate() {\r\n        throwIfThisIsPrototype(this);\r\n\r\n        if (lazySetupUnderway) {\r\n            return undefined;\r\n        }\r\n\r\n        const __queueUpdate = () => {\r\n            nextTick.queue(this.update);\r\n        };\r\n\r\n        lazySetupUnderway = true;\r\n        defineProperty(this, \"_queueUpdate\", __queueUpdate);\r\n        lazySetupUnderway = false;\r\n\r\n        return __queueUpdate;\r\n    }\r\n\r\n    /**\r\n     * Handles the render output - which normally means flush it ot DOM.\r\n     * Override for different render libraries\r\n     *\r\n     * @param renderOutput\r\n     * @private\r\n     */\r\n    _setView(renderOutput) {\r\n        let view = prepareRenderedContent(renderOutput, this) || renderOutput;\r\n\r\n        // If it looks like html, then use innerHTML\r\n        if (\"string\" === typeof view) {\r\n            this.$ui.innerHTML = view;\r\n        } else {\r\n            this.$ui.textContent = \"\";\r\n            this.$ui.appendChild(view);\r\n        }\r\n\r\n        styleComponentInstanceElement(this);\r\n    }\r\n\r\n    //--------------------------------------------------------------\r\n    //~~~~~~~~~~~~~~~~~~~~~~ LIFE CYCLE HOOKS ~~~~~~~~~~~~~~~~~~~~~~\r\n    //--------------------------------------------------------------\r\n\r\n    /**\r\n     * Called to initialize the component. At this point `this.$ui` has been set\r\n     * (to either `shadowRoot` or `this`), but nothing has ben rendered.\r\n     */\r\n    didInit() {\r\n        // FIXME: delete after v2\r\n        if (\"init\" in this) {\r\n            if (process.env.NODE_ENV !== \"production\") {\r\n                consoleWarn(`${this.constructor.name}.init() is Deprecated! Use .didInit()`);\r\n            }\r\n            this.init();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Component was mounted (attached to DOM)\r\n     */\r\n    didMount() {\r\n        // FIXME: delete after v2\r\n        if (\"ready\" in this) {\r\n            if (process.env.NODE_ENV !== \"production\") {\r\n                consoleWarn(`${this.constructor.name}.ready() is Deprecated! Use .didMount()`);\r\n            }\r\n            this.ready();\r\n        }\r\n        // FIXME: delete after v2\r\n        if (\"mounted\" in this) {\r\n            if (process.env.NODE_ENV !== \"production\") {\r\n                consoleWarn(`${this.constructor.name}.mounted() is Deprecated! Use .didMount()`);\r\n            }\r\n\r\n            // mounted() {}\r\n            this.mounted(); // FIXME: remove post v2\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Component's render function is about to be called. if a `Boolean` `false` is\r\n     * returned, `render()` will be canceled.\r\n     * @return {Boolean}\r\n     */\r\n    willRender() {}\r\n\r\n    /**\r\n     * Render the Component's content.\r\n     *\r\n     * __IMPORTANT__: Note that by default, this view handler (`_setView`) does not support\r\n     * dynamic styles in polyfilled environments. Styles will be scooped only on first render.\r\n     *\r\n     * @return {HTMLElement|DocumentFragment}\r\n     */\r\n    render(){}\r\n\r\n    /**\r\n     * Component has been rendered and dates flushed to DOM\r\n     */\r\n    didRender() {}\r\n\r\n    /**\r\n     * Called if component has been initialized (`init()` has run).\r\n     */\r\n    didUnmount() {\r\n        // FIXME: delete after v2\r\n        if (\"unmounted\" in this) {\r\n            if (process.env.NODE_ENV !== \"production\") {\r\n                consoleWarn(`${this.constructor.name}.unmounted() is Deprecated! Use .didUnmount()`);\r\n            }\r\n            this.unmounted();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Component was destroyed (destroy callback were already called)\r\n     */\r\n    didDestroy() {}\r\n\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~ EVENTEMITTER INTERFACE ~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n    /**\r\n     * Dispatches a native `CustomEvent`. The `data` provided will be available\r\n     * in the customEvent.detail property\r\n     *\r\n     * @param {String} eventName\r\n     * @param {*} data\r\n     * @param {EventInit} [eventInit=ComponentElement.eventInitOptions]\r\n     *  Any other options for the CustomEvent initialization.\r\n     *  See [Event.constructor]{@link http://devdocs.io/dom/event/event} for more.\r\n     *\r\n     * @example\r\n     *\r\n     * document.body.addEventListener(\"my-event\", function (ev) { console.log(ev.detail); });\r\n     *\r\n     * // My component\r\n     * myComponent.emit(\"my-event\", { msg: \"hello\" });\r\n     *\r\n     */\r\n    emit(eventName, data, eventInit) {\r\n        const eventNameLowercase = eventName.toLowerCase();\r\n        const event = new CustomEvent(\r\n            eventName,\r\n            objectExtend({}, this.constructor.eventInitOptions, eventInit, { detail: data })\r\n        );\r\n\r\n        if (\"function\" === typeof this[eventNameLowercase]) {\r\n            this[eventNameLowercase](event);\r\n        }\r\n\r\n        this.dispatchEvent(event);\r\n    }\r\n\r\n    /**\r\n     * Set an event listener on the current component\r\n     *\r\n     * @param {String} eventNames\r\n     *  One or more event names to listen for (space delimiter)\r\n     *\r\n     * @param {Function} callback\r\n     *\r\n     * @param {Boolean} [capture=false]\r\n     *\r\n     * @returns {DOMEventListener}\r\n     */\r\n    on(eventNames, callback, capture) {\r\n        return domAddEventListener(this, eventNames, callback, capture);\r\n    }\r\n\r\n    /**\r\n     * Add callback to be called when props change\r\n     *\r\n     * @param {Function} callback\r\n     * @param {String} [propName]\r\n     *  Optional. The specific prop to watch.\r\n     *\r\n     * @return {Function}\r\n     */\r\n    onPropsChange(callback, propName) {\r\n        return getState(this).ev.on(propName || EVENT_ANY, callback);\r\n    }\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~ NATIVE METHODS ~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n    // Reflects changed html attributes to state.props\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const propsDef =  getPropsDefinition(this.constructor);\r\n        if (propsDef[name]) {\r\n            name = propsDef[name].name;\r\n        }\r\n        this.props[name] = newValue;\r\n    }\r\n\r\n    connectedCallback() {\r\n        const state = getState(this);\r\n\r\n        if (state.destroyQueued) {\r\n            clearTimeout(state.destroyQueued);\r\n            state.destroyQueued = null;\r\n        }\r\n\r\n        state.isMounted = true;\r\n        this.didMount();\r\n        this._queueUpdate();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        // Delay calling .destroy() by 60s, just in case user re-attaches component back to dom.\r\n        // This seems to be currently the only way to ensure attached `onDestroy` logic run when\r\n        // the element is no longer needed.\r\n        if (PRIVATE.has(this)) {\r\n            const state = getState(this);\r\n            if (!state.destroyQueued) {\r\n                state.destroyQueued = setTimeout(this.destroy.bind(this), this.constructor.delayDestroy);\r\n            }\r\n            state.isMounted = false;\r\n        }\r\n\r\n        this.didUnmount();\r\n    }\r\n}\r\n\r\nexport default ComponentElement;\r\n\r\nfunction setupComponent (component) {\r\n    const { useShadow, shadowMode } = component.constructor;\r\n    if (useShadow && SHADOW_DOM_SUPPORTED) {\r\n        if (component.shadowRoot) {\r\n            component._$ui = component.shadowRoot;\r\n        }\r\n        else {\r\n            component._$ui = component.attachShadow({ mode: shadowMode });\r\n        }\r\n    }\r\n    else {\r\n        component._$ui = component;\r\n    }\r\n\r\n    component.onPropsChange(component._queueUpdate);\r\n    component.didInit();\r\n}\r\n\r\n// function __setupComponent(component) {\r\n//     const state = getState(component);\r\n//     let lastReadyState = null;\r\n//     const handleReadyChanges = () => {\r\n//         if (lastReadyState === state.ready) {\r\n//             return;\r\n//         }\r\n//\r\n//         lastReadyState = state.ready;\r\n//\r\n//         if (state.ready) {\r\n//             if (!state.hasTemplate) {\r\n//                 // component._$ui.innerHTML = component.constructor.template;\r\n//                 component._$ui.appendChild(\r\n//                     component.constructor.renderTemplate(component)\r\n//                 );\r\n//                 state.hasTemplate = true;\r\n//             }\r\n//\r\n//             component.didMount();\r\n//\r\n//             if (state.isMounted) {\r\n//                 component.didMount();\r\n//             }\r\n//         }\r\n//         else if (state.hasTemplate) {\r\n//             component.unready();\r\n//         }\r\n//\r\n//     };\r\n//\r\n//     if (component.constructor.useShadow && SHADOW_DOM_SUPPORTED) {\r\n//         if (component.shadowRoot) {\r\n//             component._$ui = component.shadowRoot;\r\n//         }\r\n//         else {\r\n//             component._$ui = component.attachShadow({ mode: component.constructor.shadowMode });\r\n//         }\r\n//     }\r\n//     else {\r\n//         component._$ui = component;\r\n//     }\r\n//\r\n//     component.didInit();\r\n//\r\n//     state.readyWatcher = objectWatchProp(state, \"ready\", handleReadyChanges);\r\n//     component.onDestroy(state.readyWatcher);\r\n//     handleReadyChanges();\r\n// }\r\n","import objectExtend from \"@purtuga/common/src/jsutils/objectExtend\"\r\nimport { defineProperty, consoleWarn} from \"@purtuga/common/src/jsutils/runtime-aliases\"\r\nimport {throwIfThisIsPrototype} from \"@purtuga/common/src/jsutils/throwIfThisIsPrototype\"\r\nimport {getKebabCase, elementHasAttributeForProp} from \"../utils\"\r\n\r\n//===============================================================================\r\nconst RE_UPPER_CASE_LETTERS = /[A-Z]/;\r\nconst NOOP = val => val;\r\n\r\n/**\r\n * Create a ComponentElement property.\r\n *\r\n * @param {Object|ComponentElement~PropDefinition} [options|Descriptor]\r\n *\r\n * @returns {Function|Descriptor}\r\n */\r\nexport function prop(options = {}) {\r\n    if (options.key && options.kind) {\r\n        return _propDecorator({}, options);\r\n    }\r\n    return _propDecorator.bind(null, options);\r\n}\r\n\r\nfunction _propDecorator(options, {key, initializer, descriptor}) {\r\n    const propDefinition = getPropSetup(\r\n        key,\r\n        initializer || descriptor.get,\r\n        descriptor.set,\r\n        options\r\n    );\r\n    const newDescriptor = getDecoratorDescriptor(key, key, propDefinition);\r\n\r\n    // Setup the aliases to proxy the values to the same `key`\r\n    if (propDefinition.aliases) {\r\n        newDescriptor.extras = propDefinition.aliases.map(aliasName => getDecoratorDescriptor(aliasName, key));\r\n    }\r\n\r\n    return newDescriptor;\r\n\r\n    //--------------------------------------------------------------------\r\n    // typical Descriptor, for something done like:\r\n    //          @prop myTest = \"value here\"\r\n    //  {\r\n    //     \"kind\": \"field\",\r\n    //     \"key\": \"myTest\",\r\n    //     \"placement\": \"field\",\r\n    //     \"initializer\": function(){ return \"value here\"; },\r\n    //     \"descriptor\": {\r\n    //         \"configurable\": true,\r\n    //         \"writable\": true,\r\n    //         \"enumerable\": true\r\n    //     }\r\n    // }\r\n    //--------------------------------------------------------------------\r\n}\r\n\r\nfunction getDecoratorDescriptor(key, proxyToPropName, componentPropDefinition) {\r\n    const DecoratorDescriptor = {\r\n        key,\r\n        kind: \"method\",\r\n        placement: \"prototype\",\r\n        descriptor: {\r\n            configurable: true,\r\n            get() {\r\n                throwIfThisIsPrototype(this);\r\n                return this.props[proxyToPropName];\r\n            },\r\n            set(newValue) {\r\n                throwIfThisIsPrototype(this);\r\n                return this.props[proxyToPropName] = newValue;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (componentPropDefinition) {\r\n        DecoratorDescriptor.finisher = function (Klass) {\r\n            // Create Class \"propsDef\" that inherits from super class\r\n            if (!Klass.hasOwnProperty(\"propsDef\")) {\r\n                defineProperty(\r\n                    Klass,\r\n                    \"propsDef\",\r\n                    objectExtend(Object.create(null), Klass.propsDef)\r\n                );\r\n            }\r\n            Klass.propsDef[key] = componentPropDefinition;\r\n        };\r\n    }\r\n\r\n    return DecoratorDescriptor;\r\n}\r\n\r\n\r\n/**\r\n * A property definition\r\n *\r\n * @private\r\n *\r\n * @param name\r\n * @param {Function} initializer\r\n * @param {Function} validator\r\n * @param {Object} propDef\r\n *\r\n * @returns {ComponentElement~PropDefinition}\r\n */\r\nfunction getPropSetup(name, initializer, validator, propDef) {\r\n    /**\r\n     * A Class prop definition\r\n     *\r\n     * @typedef {Object} ComponentElement~PropDefinition\r\n     * @property {String} name              Then name of the prop\r\n     * @property {Boolean} attr             Can the prop be set via an HTML attribute\r\n     * @property {Boolean} required         Is the prop required\r\n     * @property {Boolean} boolean          Is the prop value meant to be a boolean (note: also forces `attr` to true)\r\n     * @property {Function} default         Function that returns default value (the `getter` when decorator is used)\r\n     * @property {Function} filter          Function that filters the value being set (the `setter` when decorator is used)\r\n     * @property {Array<String>} aliases    An array of aliases for the prop\r\n     */\r\n    const propertyDefinition = objectExtend(\r\n        {\r\n            name,\r\n            attr: false,\r\n            required: false,\r\n            boolean: false,\r\n            default: initializer || NOOP,\r\n            filter: validator || NOOP,\r\n            aliases: []\r\n            // _isAlias: --- used in getPropsDefinition()\r\n        },\r\n        propDef\r\n    );\r\n\r\n    // If this is a boolean, then force `attr` to `true`, and\r\n    // redefine default adn filter values\r\n    if (propertyDefinition.boolean) {\r\n        propertyDefinition.attr = true;\r\n        propertyDefinition.default = propertyDefinition.filter = function () {\r\n            const response = elementHasAttributeForProp(this, propertyDefinition);\r\n\r\n            // DEV MODE assistance\r\n            if (process.env.NODE_ENV !== \"production\") {\r\n                // when attempting to set a value that differs from\r\n                // element.hasAttribute() - show warning in console\r\n                if (\r\n                    arguments.length &&\r\n                    (\r\n                        Boolean(\"string\" === typeof arguments[0]\r\n                            ? arguments[0] || 1\r\n                            : arguments[0]) !== response\r\n                    )\r\n                ) {\r\n                    consoleWarn(`'${this.constructor.name}#${name}|${propertyDefinition.aliases.join(\"|\")}' prop is setup as a Boolean Attr and can only be set via HTML attribute!`);\r\n                }\r\n            }\r\n\r\n            return response;\r\n        }\r\n    }\r\n\r\n    // Add name lowercase alias - if applicable\r\n    if (name.toLowerCase() !== name) {\r\n        propertyDefinition.aliases.push(name.toLowerCase());\r\n    }\r\n\r\n    // If the prop name has upper case letters, then its possible that it is\r\n    // defined as camelCase - create ka-bab alias.\r\n    if (RE_UPPER_CASE_LETTERS.test(name)) {\r\n        propertyDefinition.aliases.push(getKebabCase(name));\r\n    }\r\n\r\n    return propertyDefinition;\r\n}\r\n","import {defineProperty} from \"@purtuga/common/src/jsutils/runtime-aliases\";\r\nimport {throwIfThisIsPrototype} from \"@purtuga/common/src/jsutils/throwIfThisIsPrototype.js\"\r\n/**\r\n * Binds the given method to the Class instance on first `get`.\r\n *\r\n * @return {Function|Object}\r\n */\r\nexport function bind(options) {\r\n    if (options.key && options.kind) {\r\n        return _bound(options);\r\n    }\r\n    return _bound;\r\n}\r\n\r\nfunction _bound(decoratorDescriptor) {\r\n    const {kind, key, descriptor} = decoratorDescriptor;\r\n    if (kind === \"method\" && descriptor.value) {\r\n        let isDoingLazySetup = false; // Fuck you IE!\r\n        const method = descriptor.value;\r\n\r\n        delete descriptor.value;\r\n        delete descriptor.writable;\r\n\r\n        descriptor.get = function () {\r\n            throwIfThisIsPrototype(this);\r\n\r\n            if (isDoingLazySetup) {\r\n                return;\r\n            }\r\n            isDoingLazySetup = true;\r\n\r\n            const boundMethod = method.bind(this);\r\n            defineProperty(this, key, boundMethod);\r\n            isDoingLazySetup = false;\r\n\r\n            return boundMethod;\r\n        }\r\n    }\r\n\r\n    return decoratorDescriptor;\r\n\r\n    // {\r\n    //     \"kind\": \"method\",\r\n    //     \"key\": \"private\",\r\n    //     \"placement\": \"prototype\",\r\n    //     \"descriptor\": {\r\n    //         \"writable\": true,\r\n    //         \"configurable\": true,\r\n    //         \"enumerable\": false,\r\n    //         \"value\": function(){}\r\n    //     }\r\n    // }\r\n}\r\n","export * from \"./ComponentElement.js\"\r\nexport * from \"./decorators/prop.js\"\r\nexport * from \"./decorators/bind.js\"\r\nexport {\r\n    getState,\r\n    STATE_SYMBOL\r\n} from \"./utils\"\r\nexport { ComponentElement as default } from \"./ComponentElement.js\"\r\n\r\n"],"sourceRoot":""}